<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.ActiveReports.Core.Document</name>
    </assembly>
    <members>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationArrow">
            <summary>
            Summary description for AnnotationArrow.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationArrow.#ctor">
            <summary>
            Default constructor for the AnnotationArrow object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationArrow.ArrowDirection">
            <summary>
            Gets or sets the arrow direction.
            </summary>
            <value>The arrow direction.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationArrow.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationArrow.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save
            </summary>
            <param name="writer"></param>
            <param name="version"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon">
            <summary>
            Summary description for AnnotationBalloon.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant">
            <summary>
            Enum BallonQuadrant
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.TopLeft">
            <summary>
            The top left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.TopRight">
            <summary>
            The top right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.BottomLeft">
            <summary>
            The bottom left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.BottomRight">
            <summary>
            The bottom right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.LeftTop">
            <summary>
            The left top
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.LeftBottom">
            <summary>
            The left bottom
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.RightTop">
            <summary>
            The right top
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.RightBottom">
            <summary>
            The right bottom
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.BallonQuadrant.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.#ctor">
            <summary>
            Default constructor for the AnnotationBalloon object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.Quadrant">
            <summary>
            Quadrant
            Where does the tail go?
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBalloon.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save
            </summary>
            <param name="writer"></param>
            <param name="version"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText">
            <summary>
            It represents the base class of all Annotation objects.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText._textColor">
            <summary>The color of the text.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText._text">
            <summary>The text of the AnnotationText Object.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText._font">
            <summary>The font used to draw the text of the AnnotationText Object.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText._format">
            <summary>The StringFormat that will be used to draw the text string.</summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.#ctor">
            <summary>
            Default constructor for the AnnotationText object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.Text">
            <summary>The text of the AnnotationText Object.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.Font">
            <summary> Font of the text </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.TextColor">
            <summary>Text color</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.Alignment">
            <summary>The Horizontal alignment of the text in the annotation's bounds.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.LineAligment">
            <summary>The vertical alignment of the text in the annotation's bounds.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationBaseText.Format">
            <summary>
            For internal use only
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCircle">
            <summary>
            Summary description for AnnotationCircle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCircle.#ctor">
            <summary>
            Default constructor for the AnnotationCircle object.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationImage">
            <summary>
            Summary description for AnnotationImage.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationImage.#ctor">
            <summary>
            Default constructor for the AnnotationImage object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationImage.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationImage.BackgroundLayout">
            <summary>
            Gets or sets the background layout.
            </summary>
            <value>The background layout.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationImage.ShowBorder">
            <summary>
            Gets or sets a value indicating whether [show border].
            </summary>
            <value><c>true</c> if [show border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine">
            <summary>
            Summary description for AnnotationLine
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.colorText">
            <summary>The color of the text.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.textValue">
            <summary>The text of the AnnotationLine Object.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.textWidthValue">
            <summary>The width of the Text to display.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.fontValue">
            <summary>The font used to draw the text of the AnnotationLine Object.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.format">
            <summary>The StringFormat that will be used to draw the text string.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.colorLine">
            <summary>The LineColor is the color used for the line</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine._widthLine">
            <summary>The LineWidth is the width of the line used</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.verticalLinePlacement">
            <summary>The LinePlacement is the vertical location of the line used</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.lineDashStyle">
            <summary>The DashStyle is the style of the line to display</summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LinePlacement">
            <summary>
            Specifies where the border of the object is drawn.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LinePlacement.Top">
            <summary>
            Draws a line at the top of the object.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LinePlacement.Middle">
            <summary>
            Draws a line in the center of the object.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LinePlacement.Bottom">
            <summary>
            Draws a line at the bottom of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ShowArrowCap">
            <summary>
            Specify whether to draw arrowheads or not.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ShowArrowCap.LeftOnly">
            <summary>
            Draw the arrowhead at the left end.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ShowArrowCap.RightOnly">
            <summary>
            Draw the arrowhead at the right end.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ShowArrowCap.LeftRight">
            <summary>
            Draw arrowheads at both ends.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ShowArrowCap.None">
            <summary>
            Do not draw arrowheads.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.#ctor">
            <summary>
            Default constructor for the AnnotationLine object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Border">
            <summary>
            The Border property allows you to access the border object for the annotation object.
            </summary>
            <value>The Border property allows you to access the border object for the annotation object.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Color">
            <summary>
            The color is used to fill the annotation object.
            </summary>
            <value>The color is used to fill the annotation object.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.FillArrowCaps">
            <summary>
            Gets or sets a value indicating whether [fill arrow caps].
            </summary>
            <value><c>true</c> if [fill arrow caps]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Width">
            <summary>
            The Width is the width of the annotation object.
            </summary>
            <value>The Width is the width of the annotation object.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LineLocation">
            <summary>
            Gets or sets the line location.
            </summary>
            <value>The line location.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.DashStyle">
            <summary>
            Gets or sets the dash style.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.DashCap">
            <summary>
            Gets or sets the dash cap.
            </summary>
            <value>The dash cap.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ShowArrowCaps">
            <summary>
            Gets or sets the show arrow caps.
            </summary>
            <value>The show arrow caps.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ArrowCapHeight">
            <summary>
            Gets or sets the height of the arrow cap.
            </summary>
            <value>The height of the arrow cap.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.ArrowCapWidth">
            <summary>
            Gets or sets the width of the arrow cap.
            </summary>
            <value>The width of the arrow cap.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Text">
            <summary>The text of the AnnotationText Object.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.TextWidth">
            <summary>
            Gets or sets the width of the text.
            </summary>
            <value>The width of the text.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Format">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Alpha">
            <summary>
            Controls the alpha channel of the background color
            </summary>
            <value>The alpha.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.LineWidth">
            <summary>
            Gets or sets the width of the AnnotationLine object.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.TextAlignment">
            <summary>The Horizontal alignment of the text in the annotation's bounds.</summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save
            </summary>
            <param name="writer"></param>
            <param name="version"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationLine.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load
            </summary>
            <param name="reader"></param>
            <param name="version"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationRectangle">
            <summary>
            Summary description for AnnotationRectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationRectangle.#ctor">
            <summary>
            Default constructor for the AnnotationRectangle object.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.Border">
            <summary>
            Draws a border around a Annotations object.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.Annotations.Border.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Border._bounds">
            <summary>This rectangle defines the bounds of the border.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Border._color">
            <summary>This color is the color used to draw the border.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Border.Color">
            <summary>
            The color is used to display the border.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Border.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.Border.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.BorderCircle">
            <summary>
            Draws a border around an AnnotationCircle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.BorderCircle.#ctor">
            <summary>
            Initializes a new instance of BorderCircle class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.BorderRectangle">
            <summary>
            Draws a border around an AnnotationRectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.BorderRectangle.#ctor">
            <summary>
            Initializes a new instance of BorderRectangle class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.BorderConverter">
            <summary>
            Design time support for annotation. For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.BorderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
             Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A System.Type that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.BorderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A System.Globalization.CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="value">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation">
            <summary>
            Summary description for Annotation.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._annotations">
            <summary>
            The annotationsValue is a reference to the Annotations Object that contains this annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._border">
            <summary>
            The borderValue is a reference to the annotation object's border object.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._x">
            <summary>
            The xValue is the left most coordinate for the annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._y">
            <summary>
            The yValue is the top most coordinate for the annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._width">
            <summary>
            The widthValue is the width for the annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._height">
            <summary>
            The heightValue is the height for the annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation._fillColor">
            <summary>
            This fillValue contains the color that is used to fill the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.PageRectangle">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Renderer">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.#ctor(GrapeCity.ActiveReports.Document.Section.Annotations.Border)">
            <summary>
            Default constructor for the annotation object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Border">
            <summary>
            The Border property allows you to access the border object for the annotation object.
            </summary>
            <value>
            The Border property allows you to access the border object for the annotation object.
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Width">
            <summary>The Width is the width of the annotation object.</summary>
            <value>The Width is the width of the annotation object.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Height">
            <summary>The Height is the height of the annotation object.</summary>
            <value>The Height is the height of the annotation object.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Color">
            <summary>The color is used to fill the annotation object.</summary>
            <value>The color is used to fill the annotation object.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Alpha">
            <summary>
            Controls the alpha channel of the background color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.X">
            <summary>The X is the left most coordinate for the annotation object.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Y">
            <summary>The Y is the top most coordinate for the annotation object.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Annotations">
            <summary>Annotations is a reference to the AnnotationsCollection.</summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Bounds">
            <summary>
            The Bounds property is a rectangle that defines the bounds of the annotation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Attach(System.Single,System.Single)">
            <summary>
            The method set the top left most coordinates for the annotation object.</summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.Annotation.Refresh">
            <summary>
            The method refreshes the display of the annotation object.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection">
            <summary>
            This collection contains a collection of annotations.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.#ctor">
            <summary>
            Initializes a new instance of AnnotationCollecion class.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.AnnotationAdded">
            <summary>
            Fired, when annotation was just added.
            For internal use. Subject of change without notice.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.AnnotationRemoved">
            <summary>
            Fired, when annotation was just removed.
            For internal use. Subject of change without notice.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.CollectionCleared">
            <summary>
            Fired, when collection was cleared.
            For internal use. Subject of change without notice.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.BackColor">
            <summary>
            Gets or sets the backcolor.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.Add(GrapeCity.ActiveReports.Document.Section.Annotations.Annotation)">
            <summary>
            The Add method adds an annotation to the end of the collection.
            </summary>
            <param name="annotation">The annotation that is added to the end of the collection.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.Remove(GrapeCity.ActiveReports.Document.Section.Annotations.Annotation)">
            <summary>
            Removes the specified annotation.
            </summary>
            <param name="annotation">The annotation.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationCollection.Refresh(GrapeCity.ActiveReports.Document.Section.Annotations.Annotation)">
            <summary>
            This method forces an annotation to refresh its display.
            </summary>
            <param name="annotation">Is the annotation that will be refreshed.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationText">
            <summary>
            Summary description for AnnotationText.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Annotations.AnnotationText.#ctor">
            <summary>
            Initializes a new instance of AnnotationText class.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.ArrowDirection">
            <summary>
            Arrow annotation direction
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ArrowDirection.Left">
            <summary>
            Left Arrow
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ArrowDirection.Top">
            <summary>
            Top Arrow
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ArrowDirection.Right">
            <summary>
            Right Arrow
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ArrowDirection.Bottom">
            <summary>
            Bottom Arrow
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout">
            <summary>
            Image annotation layout
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Zoom">
            <summary>
            The image is displayed according to the size of the control.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Tile">
            <summary>
            The image is the actual size and is displayed side-by-side across the area of the annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Stretch">
            <summary>
            Gets or sets whether the image is stretched to the region of the annotation regardless of the aspect ratio.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Center">
            <summary>
            The image is displayed in the center of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Left">
            <summary>
            The image is displayed at the left edge of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Top">
            <summary>
            The image is displayed at the top of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Right">
            <summary>
            The image is displayed at the right end of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.Bottom">
            <summary>
            The image is displayed at the bottom of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.LeftTop">
            <summary>
            The image is displayed at the upper left corner of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.RightTop">
            <summary>
            The image is displayed at the upper right corner of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.RightBottom">
            <summary>
            The image is displayed at the bottom right corner of the annotation area.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Annotations.ImageLayout.LeftBottom">
            <summary>
            The image is displayed at the bottom left corner of the annotation area.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.LabelAttribute">
            <summary>
            Class LabelAttribute.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LabelAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.LabelAttribute"/> class.
            </summary>
            <param name="label">The label.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LabelAttribute.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClippingStack.PushClipRect">
            <summary>
            Takes the current clipRect (in CurrentClipRect property) and pushes it onto the ClipStack.  
            The current cliprect is still maintained as the "current cliprect".
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClippingStack.PopClipRect">
            <summary>
            Takes the last cliprect put onto the stack and sets it as the current cliprect.
            If there are no cliprects on the stack then the current cliprect is cleared, and IsClipActive is set to false.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClippingStack.IntersectClipRect(System.Drawing.RectangleF)">
            <summary>
            Uses member method RectangleF.Intersect on the currentCliprect to calculate the intersecting clipping rectangle and sets that resulting clip rect as the current clip rect available via the ClipRect property.
            </summary>
            <param name="intersectClip">The clipping rectangle to intersect the current clipping rectangle with.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClippingStack.OutsideRect(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if element is entirely outside rectangle. False if inside or intersecting.
            </summary>
            <param name="pcr">Clip rect.</param>
            <param name="elementX">x coordinate for element.</param>
            <param name="elementY">y coordinate for element.</param>
            <param name="elementWidth">width for element.</param>
            <param name="elementHeight">height for element.</param>
            <returns>True if element is entirely outside rectangle, otherwise returns false.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.NumericUnit">
            <summary>
            UnitValue class.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.NumericUnit.data">
            <summary>
            data
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.NumericUnit.PropertyChanged">
            <summary>
            PropertyChanged
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.NumericUnit.type">
            <summary>
            type
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.NumericUnit.Type">
            <summary>
            Type Property
            <para><br/>Type of the value property, ex. pixels, inches, percentage</para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.NumericUnit.Value">
            <summary>
            Value
            <para><br/>Is the value</para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.Save(System.IO.BinaryWriter)">
            <summary>
            Save Method
            <para><br/>Save the infomation to a BinaryWriter</para>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.Load(System.IO.BinaryReader)">
            <summary>
            Load Method
            <para><br/>Load the information from a BinaryReader</para>
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.WriteXml(System.String,System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            <para><br/>Loads the attribute information into a XmlElement Node.
            This method is used to save the table information into rpx format for the 
            designer.</para>
            </summary>
            <param name="prefix"></param>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.ReadXml(System.String,System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="prefix"></param>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.CalculateValue(System.Single,System.Single)">
            <summary>
            CalculateValue
            
            	Calculates the contained value to inches
            </summary>
            <param name="dpiX"></param>
            <param name="containersWidth"></param>
            <returns>The return value is in inches</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.CalculateValueY(System.Single,System.Single)">
            <summary>
            CalculateValueY
            </summary>
            <param name="dpiY"></param>
            <param name="containersHeight"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.NumericUnit.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Bookmark">
            <summary>
            Represents a Bookmark.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Bookmark.#ctor">
            <summary>
            BookMark Constructor.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Bookmark.Label">
            <summary>
            Represents the name of the Bokmark.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Bookmark.PageNumber">
            <summary>
            Page number in the Document's pages collection in which this bookmark is contained.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Bookmark.Offset">
            <summary>
            OffSet from the top of Page where the bookmark resides on the Page object.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Bookmark.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Summary description for Load Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Bookmark.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Summary description for Save Method.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.BookmarksCollection">
            <summary>
            BookMark Coillection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.BookmarksCollection"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Dispose">
            <summary>
            Release resources used by BookMarksCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.GenerateBookmarks">
            <summary>
            Summary description for GenerateBookmarks.
            </summary>
            <remarks>
            For internal use only
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Load(System.IO.BinaryReader,GrapeCity.ActiveReports.Core.Document.IPagesCollection{GrapeCity.ActiveReports.Core.Document.Page})">
            <summary>
            Summary description for Load Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Save(System.IO.BinaryWriter)">
            <summary>
            Summary description for Save Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Save20Format(System.IO.BinaryWriter)">
            <summary>
            Summary description for Save Method.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.IsDirty">
            <summary>
            If true, then bookmarks collection should be repopulated
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.CurrentBookmark">
            <summary>
            Return the index of currently active or selected BookMark from the BookMarksCollection.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Item(System.Int32)">
            <summary>
            Returns a Page object at specified index in the BookMarksCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Contains(GrapeCity.ActiveReports.Document.Section.Bookmark)">
            <summary>
            Determines whether a Page element is in the BookMarksCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.CopyTo(GrapeCity.ActiveReports.Document.Section.Bookmark[],System.Int32)">
            <summary>
            Copies an array of BookMark objects to BookMarksCollection from the specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.IndexOf(GrapeCity.ActiveReports.Document.Section.Bookmark)">
            <summary>
            Returns the zero-based index of the first occurrence of the BookMark object in the BookMarksCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Add(GrapeCity.ActiveReports.Document.Section.Bookmark)">
            <summary>
            Adds a BookMark object to the end of the BookMarksCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Insert(System.Int32,GrapeCity.ActiveReports.Document.Section.Bookmark)">
            <summary>
            Inserts a BookMark object into the BookMarksCollection at the specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Remove(GrapeCity.ActiveReports.Document.Section.Bookmark)">
            <summary>
            Removes the first occurrence of BookMark object from the BookMarksCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BookmarksCollection.Clear">
            <summary>
            Removes all the BookMark objects from the BookMarksCollection.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.CanvasItemCollection">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItemCollection.#ctor(GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Do not allow external assemblies to create instances of this class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItemCollection.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItemCollection.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.CanvasItemRenderer.State">
            <summary>
            State
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasItemRenderer.DeviceInfo">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.CanvasItem">
            <summary>
            Summary description for CanvasItem.
            
            All canvas items coordinates are in inches
            
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasItem._disposed">
            <summary>
            Shows was the item disposed or not.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasItem._searchOffset">
            <summary>
            The index of the last char of search.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasItem._selectionOffset">
            <summary>
            The index of the first char of search.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasItem._selectionLength">
            <summary>
            The length of search range of source string.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasItem._searchText">
            <summary>
            The search string.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.#ctor(GrapeCity.ActiveReports.Document.Section.CanvasType)">
            <summary>
            Internal because we don't ever want assemblies outside of this assembly to be able to create an instance or or derive from CanvasItem.
            </summary>
            <param name="ctType"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.CanvasItem.SelectionOffset">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.CanvasItem.SelectionLength">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.CanvasItem.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.CanvasItem.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.PageOffset">
            <summary>
            Gets the page offset.
            </summary>
            <returns>The page offset.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.Read(System.IO.BinaryReader,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.ReadAndCreateCanvasItem(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Document.Section.CanvasItemCollection,System.Boolean,GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            ReadAndCreateCanvasItem
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
            <param name="canvasItems"></param>
            <param name="currentEvalMode"></param>
            <param name="pageObj"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.ReadCanvasItemType(System.IO.BinaryReader,GrapeCity.ActiveReports.Document.Section.CanvasType@,System.Int32@)">
            <summary>
            Reads the type of the canvas item and record length
            </summary>
            <param name="reader">The reader.</param>
            <param name="canvasItemType">Type of the canvas item.</param>
            <param name="length">The length of the canvas item data. Returns -1 is length is unknown (legacy items)</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.WriteCanvasItemType(System.IO.BinaryWriter,GrapeCity.ActiveReports.Document.Section.CanvasType,System.Int32)">
            <summary>
            Writes the type of the canvas item. Support new canvas items (with length written)
            </summary>
            <param name="writer">The writer.</param>
            <param name="canvasItemType">Type of the canvas item.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.CanvasItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SVG">
            <summary>
            SVG.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SVG.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SVG.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SVG.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SVG and reads it from specified reader.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SVG.Bounds">
            <summary>
            Gets the bounds.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.LineItem">
            <summary>
            Summary description for Line.
            
            Line was changed to LineItem because we have a Line class in the DataDynamics.ActiveReports3 namespace 
            which is also included in every single report's codebehind by default. 
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LineItem.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.LineItem"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LineItem.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LineItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LineItem.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates LineItem and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>LineItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LineItem.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LineItem.X1">
            <summary>
            Gets or sets the x1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LineItem.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LineItem.X2">
            <summary>
            Gets or sets the x2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LineItem.Y2">
            <summary>
            Gets or sets the y2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LineItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.FillRect">
            <summary>
            Summary description for FillRect.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.FillRect.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.FillRect.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>The string representation of FillRect uncluded left and right coordinates, weidth, height.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.FillRect.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates FillRect and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>FillRect.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.FillRect.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Rect">
            <summary>
            Summary description for Rect.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Rect.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.Rect"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Rect.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Rect.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Rect.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates Rect and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>Rect.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Rect.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.IntersectClip">
            <summary>
            Summary description for IntersectClip.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.IntersectClip.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.IntersectClip"/> class.
            </summary>
            <param name="rcClip">The rc clip.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.IntersectClip.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.IntersectClip.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.IntersectClip.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates IntersectClip and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>IntersectClip.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IntersectClip.Rectangle">
            <summary>
            Gets the rectangle.
            </summary>
            <value>The rectangle.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IntersectClip.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IntersectClip.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IntersectClip.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IntersectClip.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IntersectClip.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Ellipse">
            <summary>
            Summary description for Ellipse.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Ellipse.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Ellipse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Ellipse.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates Ellipse and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>Ellipse.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Ellipse.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Ellipse.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Ellipse.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Ellipse.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Ellipse.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.RoundRect">
            <summary>
            Summary description for RoundRect.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRect.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.RoundRect"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="edgeWidth">Width of the edge.</param>
            <param name="edgeHeight">Height of the edge.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRect.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRect.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRect.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates RoundRect and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRect.R1">
            <summary>
            Gets the radius 1.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRect.R2">
            <summary>
            Gets the r2.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRect.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ForeColor">
            <summary>
            Summary description for ForeColor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ForeColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.ForeColor"/> class.
            </summary>
            <param name="crFore">The cr fore.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ForeColor.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ForeColor.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ForeColor.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates ForeColor and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ForeColor.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.BackColor">
            <summary>
            Summary description for BackColor.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.BackColor"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackColor.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackColor.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackColor.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates BackColor and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BackColor.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextAngle">
            <summary>
            Summary description for TextAngle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextAngle.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextAngle.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextAngle.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates TextAngle and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextAngle.Angle">
            <summary>
            Gets the angle.
            </summary>
            <value>The angle.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ClipRect">
            <summary>
            Summary description for ClipRect.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClipRect.#ctor(GrapeCity.ActiveReports.Document.Section.CanvasType)">
            <summary>
            Internal because we don't ever want assemblies outside of this assembly to be able to create an instance or or derive from CanvasItem.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClipRect.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClipRect.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ClipRect.Read(System.IO.BinaryReader,GrapeCity.ActiveReports.Document.Section.CanvasType,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="type"></param>
            <param name="fileVersion"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Align">
            <summary>
            Summary description for Align.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.#ctor(GrapeCity.ActiveReports.Document.Section.CanvasType)">
            <summary>
            Align
            </summary>
            <param name="ctType"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.#ctor(GrapeCity.ActiveReports.Document.Section.TextAlignment)">
            <summary>
            Align
            </summary>
            <param name="theTextAlignment"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.#ctor(GrapeCity.ActiveReports.Document.Section.VerticalTextAlignment)">
            <summary>
            Align
            </summary>
            <param name="theVerticalTextAlignment"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.#ctor(GrapeCity.ActiveReports.Document.Section.TextJustify)">
            <summary>
            Justify
            </summary>
            <param name="textJustify"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Align.Read(System.IO.BinaryReader,GrapeCity.ActiveReports.Document.Section.CanvasType,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="type"></param>
            <param name="fileVersion"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.RTL">
            <summary>
            Summary description for Right To Left.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RTL.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.RTL"/> class.
            </summary>
            <param name="rightToLeft">if set to <c>true</c> [right to left].</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RTL.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RTL.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RTL.Read(System.IO.BinaryReader,GrapeCity.ActiveReports.Document.Section.CanvasType,System.Int16)">
            <summary>
            Returns RTL of the specified type.
            </summary>
            <param name="reader">The reader.</param>
            <param name="type">The type.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.BackStyle">
            <summary>
            Summary description for BackStyle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackStyle.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackStyle.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BackStyle.Read(System.IO.BinaryReader,GrapeCity.ActiveReports.Document.Section.CanvasType,System.Int16)">
            <summary>
            Returns BackStyle of the specified type
            </summary>
            <param name="reader">The reader.</param>
            <param name="type">The type.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.WordWrap">
            <summary>
            Summary description for WordWrap.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WordWrap.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WordWrap.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WordWrap.Read(System.IO.BinaryReader,GrapeCity.ActiveReports.Document.Section.CanvasType,System.Int16)">
            <summary>
            Returns WordWrap for specified type.
            </summary>
            <param name="reader">The reader.</param>
            <param name="type">The type.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SelectFont">
            <summary>
            Summary description for SelectFont.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SelectFont.FontIndex">
            <summary>
            Gets or sets the index of the font.
            </summary>
            <value>The index of the font.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SelectFont.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SelectFont.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SelectFont.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SelectFont and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.VerticalText">
            <summary>
            Summary description for PenStyle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.VerticalText.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.VerticalText.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.VerticalText.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates VerticalText and reads it from the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.VerticalText.IsVerticalText">
            <summary>
            Gets a value indicating whether this instance is vertical text.
            </summary>
            <value><c>true</c> if this instance is vertical text; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PenStyle">
            <summary>
            Summary description for PenStyle.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenStyle.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.PenStyle"/> class from being created.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenStyle.#ctor(GrapeCity.ActiveReports.Document.Section.PenStyles)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.PenStyle"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenStyle.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenStyle.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenStyle.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Return an instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.PenStyle"/> recieved from reader.
            </summary>
            <param name="reader">Reader containing the binary data of <see cref="T:GrapeCity.ActiveReports.Document.Section.PenStyle"/>.</param>
            <param name="fileVersion">The type of data in stream.</param>
            <returns>A new <see cref="T:GrapeCity.ActiveReports.Document.Section.PenStyle"/> instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PenStyle.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PenWidth">
            <summary>
            Summary description for PenWidth.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenWidth.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.PenWidth"/> class from being created.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenWidth.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.PenWidth"/> class.
            </summary>
            <param name="penThickness">The pen thickness.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenWidth.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenWidth.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PenWidth.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates PenWidth and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PenWidth.PenThickness">
            <summary>
            Gets the pen thickness.
            </summary>
            <value>The pen thickness.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.BorderItem">
            <summary>
            Summary description for Border.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BorderItem.#ctor(GrapeCity.ActiveReports.Border,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BorderItem overload for borderWidth, am using this in rtf only right now
            </summary>
            <param name="border"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="bWidthT"></param>
            <param name="bWidthL"></param>
            <param name="bWidthB"></param>
            <param name="bWidthR"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BorderItem.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BorderItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.BorderItem.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates BorderItem and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BorderItem.InternalBorder">
            <summary>
            Gets the internal border.
            </summary>
            <value>The internal border.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BorderItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BorderItem.TopBorderWidth">
            <summary>
            Gets the width of the top border.
            </summary>
            <value>The width of the top border.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BorderItem.LeftBorderWidth">
            <summary>
            Gets the width of the left border.
            </summary>
            <value>The width of the left border.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BorderItem.BottomBorderWidth">
            <summary>
            Gets the width of the bottom border.
            </summary>
            <value>The width of the bottom border.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.BorderItem.RightBorderWidth">
            <summary>
            Gets the width of the right border.
            </summary>
            <value>The width of the right border.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Extension">
            <summary>
            Summary description for Extension.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ResetContext">
            <summary>
            Summary description for ResetContext.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ResetContext.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ResetContext.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ResetContext.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates ResetContext and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.AlignmentTypes">
            <summary>
            This AlignmentTypes Enum specifies how text will be aligned in a table cell.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.AlignmentTypes.Near">
            <summary>
            The near
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.AlignmentTypes.Center">
            <summary>
            The center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.AlignmentTypes.Far">
            <summary>
            The far
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.EvaluationStart">
            <summary>
            Summary description for EvaluationStart.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationStart.#ctor">
            <summary>
            EvalCanvasItem
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationStart.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationStart.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationStart.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a EvalCanvasItem object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationStart.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.EvaluationEnd">
            <summary>
            Summary description for EvaluationStart.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationEnd.#ctor">
            <summary>
            EvalCanvasItem
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationEnd.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationEnd.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationEnd.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a EvalCanvasItem object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EvaluationEnd.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SetCharacterSpacing">
            <summary>
            RS: CR 23121 - SetCharacterSpacing canvas item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetCharacterSpacing.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetCharacterSpacing.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SetCharacterSpacing.CharacterSpacing">
            <summary>
            Gets or sets the character spacing.
            </summary>
            <value>The character spacing.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetCharacterSpacing.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SetCharacterSpacing and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>SetCharacterSpacing.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SetScaleX">
            <summary>
            SetMinCondenseRate canvas item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetScaleX.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetScaleX.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SetScaleX.ScaleX">
            <summary>
            Gets or sets the minimal character condensed rate.
            </summary>
            <value>The character spacing.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetScaleX.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SetMinCondenseRate and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>SetMinCondenseRate.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SetLineSpacing">
            <summary>
            RS: CR 23121 - SetLineHeight canvas item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetLineSpacing.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetLineSpacing.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SetLineSpacing.LineSpacing">
            <summary>
            Gets or sets the line spacing.
            </summary>
            <value>The line spacing.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetLineSpacing.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SetLineSpacing and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>SetLineSpacing.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SetPadding">
            <summary>
            RS: CR 23121 - SetLineHeight canvas item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetPadding.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetPadding.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SetPadding.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SetPadding.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SetPadding and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem">
            <summary>
            Summary description for Align.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem.#ctor(GrapeCity.ActiveReports.Document.Section.TextRenderHint)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem"/> class.
            </summary>
            <param name="hint">The hint.</param>
            <exception cref="T:System.ArgumentException">Hint value exceeds boundaries;hint</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem.Hint">
            <summary>
            Gets the hint.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextRenderHintItem.ReadContents(System.IO.BinaryReader)">
            <summary>
            Reads the item contents from stream
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.WrapModeItem">
            <summary>
            Represents text wrap mode
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WrapModeItem.#ctor(GrapeCity.ActiveReports.Document.Section.WrapMode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.WrapModeItem"/> class.
            </summary>
            <param name="mode">The mode.</param>
            <param name="enableKinsoku">if set to <c>true</c> [enable kinsoku].</param>
            <exception cref="T:System.ArgumentException">WrapMode value exceeds boundaries;mode</exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.WrapModeItem.Mode">
            <summary>
            Gets the hint.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.WrapModeItem.Kinsoku">
            <summary>
            Gets true if Kinsoky word breaking rules are enabled
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WrapModeItem.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WrapModeItem.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.WrapModeItem.ReadContents(System.IO.BinaryReader)">
            <summary>
            Reads the item contents from stream
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextInfoItem">
            <summary>
            Used for TextBox control while exporting report to Excel.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.#ctor">
            <summary>
            TextInfo
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.#ctor(System.String,System.Object,System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            TextInfo
            </summary>
            <param name="outputFormat"></param>
            <param name="value"></param>
            <param name="culture"></param>
            /// <param name="currencyCulture"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextInfoItem.OutputFormat">
            <summary>
            OutputFormat
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextInfoItem.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextInfoItem.CultureId">
            <summary>
            CultureName
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextInfoItem.CurrencyCultureId">
            <summary>
            CurrencyCultureName
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.CreateRead(System.IO.BinaryReader,System.Int16,System.Int32)">
            <summary>
            CreateRead
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.Create(System.String,System.Object,System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            This method is for internal use only.
            Generate the TextInfo when exporting.
            </summary>
            <param name="outputFormat"></param>
            <param name="value"></param>
            <param name="culture"></param>
            <param name="currencyCulture"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextInfoItem.ReadSafe(GrapeCity.ActiveReports.Document.Section.DrawTextLink,System.Int16)">
            <summary>
            Reads the TextInfo item saved in AR6
            </summary>
            <param name="textOut"></param>
            <param name="ver"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextBoundsRange">
            <summary>
            Text bounds range canvas item
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextBoundsRange.#ctor(System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="startPos">Top bound.</param>
            <param name="endPos">Bottom bound.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextBoundsRange.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextBoundsRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextBoundsRange.StartPosition">
            <summary>
            Gets or sets top bound.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextBoundsRange.EndPosition">
            <summary>
            Gets or sets bottom bound.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextBoundsRange.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates SetMinCondenseRate and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>SetMinCondenseRate.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ControlInfo">
            <summary>
            Summary description for ControlInfo.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.#ctor">
            <summary>
            ControlInfo
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.#ctor(GrapeCity.ActiveReports.Document.Section.ControlType,System.String,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the ControlInfo class. For internal use only.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="bounds"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ControlInfo.ControlType">
            <summary>
            ControlType
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ControlInfo.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ControlInfo.Bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a ControlInfo object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.Read(System.IO.BinaryReader,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfo.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ControlInfoEnd">
            <summary>
            Class ControlInfoEnd.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfoEnd.#ctor">
            <summary>
            For internal use only
            </summary>
            <param name="endPoint"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfoEnd.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfoEnd.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfoEnd.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a ControlInfo object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ControlInfoEnd.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SectionInfoEnd">
            <summary>
            Summary description for SectionInfoEnd.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfoEnd.#ctor">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfoEnd.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfoEnd.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfoEnd.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a ControlInfo object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfoEnd.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SectionInfo">
            <summary>
            Summary description for SectionInfo.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.#ctor">
            <summary>
            ControlInfo
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.#ctor(GrapeCity.ActiveReports.Document.Section.SectionType,System.String)">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SectionInfo.SectionType">
            <summary>
            SectionType
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SectionInfo.Name">
            <summary>
            SectionName
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a ControlInfo object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.Read(System.IO.BinaryReader,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SectionInfo.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.InputFieldCheckBoxItem">
            <summary>
            Canvas item for checkBox fields
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldCheckBoxItem.Checked">
            <summary>
            Gets the value indicating the state of the CheckBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldCheckBoxItem.CheckSize">
            <summary>
            Gets the size of check symbol inside the CheckBox.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldCheckBoxItem.CheckStyle">
            <summary>
            Gets the style of check symbol inside the CheckBox.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.InputFieldItem">
            <summary>
             Base canvas item for InputFields
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.Left">
            <summary>
            Gets the left position of the inputFieldItem.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.Top">
            <summary>
            Gets the top position of the inputFieldItem.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.Width">
            <summary>
            Gets the width of the inputFieldItem.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.Height">
            <summary>
            Gets the height of the inputFieldItem.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.FieldName">
            <summary>
            Specifies the unique name of the field.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.ReadOnly">
            <summary>
            Prevents the user from changing the form field content.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.Required">
            <summary>
            Forces the user to fill in the selected field.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.BorderStyle">
            <summary>
            Border style.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.BorderWidth">
            <summary>
            Border width.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldItem.BorderColor">
            <summary>
            Border color.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem">
            <summary>
            Canvas item for text fields
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem.MaxLength">
            <summary>
            Specifies the maximum length of the text entered. When 0, the text is not restricted to any specified length.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem.Multiline">
            <summary>
            Allows more than a single-line entry in the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem.Password">
            <summary>
            Displays the user-entered text as a series of asterisks (*).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem.SpellCheck">
            <summary>
            Indicates whether the text should be spell checked during its input or not.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem.Alignment">
            <summary>
            Text alignment.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.InputFieldTextItem.Text">
            <summary>
            Text value.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.RawImageResourceData">
            <summary>
            Container for RDF document images
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.AssemblyName">
            <summary>
            The assembly name
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.TypeName">
            <summary>
            The type name
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.Data">
            <summary>
            Either byte[], String or null. Used to instantiate actual Image object.
            null - invalid value, which will be set if persistenceType is -1.
            which, in turn means of an broken RDF.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.#ctor(System.String,System.String,System.Guid,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.RawImageResourceData"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="typeName">Name of the type.</param>
            <param name="imageFormatGUID">The image format unique identifier.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.IsMetafile">
            <summary>
            Gets true if underlying image is metafile
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.ToBytes">
            <summary>
            Returns content of the object in the RDF format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.CreateImage(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Creates new image based on resource data
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.Write(System.IO.BinaryWriter)">
            <summary>
            Writes content in the RDF format.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.FromStream(System.IO.BinaryReader)">
            <summary>
            Reads data in RDF format, creates new instance of RIRD with it.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RawImageResourceData.FromImage(System.Drawing.Image,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Creates raw view from an image.
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.IBordered">
            <summary>
            Interface IBordered
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.IBordered.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem">
            <summary>
            Summary description for ResourcedCanvasItem.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem._left">
            <summary>
            The x-coordinate of the left edge of <see cref="T:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem"/> structure.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem._top">
            <summary>
            The y-coordinate of the left edge of <see cref="T:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem"/> structure.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem._width">
            <summary>
            The width of <see cref="T:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem"/> structure.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem._height">
            <summary>
            The height of <see cref="T:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem"/> structure.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.ResourceMgr">
            <summary>
            Gets resource manager
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.#ctor(GrapeCity.ActiveReports.Document.Section.CanvasType)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem"/> class.
            </summary>
            <param name="canvasType">Type of the canvas.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.GetImage(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Gets image from resource pool. Call Dispose after using the image!
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.InnerKey">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.Desc">
            <summary>
            Gets or sets the desc.
            </summary>
            <value>The desc.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>CanvasItem.</returns>
            <exception cref="T:System.Exception">The method or operation is not available for resource canvas items.</exception>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ILinkItem">
            <summary>
            Common interface of link items
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ILinkItem.Link">
            <summary>
            Gets the link.
            </summary>
            <value>The link.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.ILinkItem.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.LinkItem">
            <summary>
            Summary description for LinkItem.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.LinkItem._strLink">
            <summary>
            Hyperlink.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LinkItem.#ctor(GrapeCity.ActiveReports.Document.Section.CanvasType)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.LinkItem"/> class.
            </summary>
            <param name="ctType">Type of the canvas.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.LinkItem.Link">
            <summary>
            Gets the link.
            </summary>
            <value>The link.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.LinkItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.EnhMeta">
            <summary>
            Summary description for EnhMeta.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EnhMeta.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EnhMeta.CreateRead(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Creates EnhMeta and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <param name="pageObj">The page object.</param>
            <returns>EnhMeta.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.EnhMetaLink">
            <summary>
            Summary description for EnhMetaLink.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EnhMetaLink.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.EnhMetaLink.CreateRead(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Creates EnhMetaLink and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <param name="pageObj">The page object.</param>
            <returns>EnhMetaLink.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.JPEGImage">
            <summary>
            Summary description for JPEGImage.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.JPEGImage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.JPEGImage.CreateRead(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Creates JPEGImage and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <param name="pageObj">The page object.</param>
            <returns>JPEGImage.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.JPEGLink">
            <summary>
            Summary description for JPEGLink.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.JPEGLink.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.JPEGLink.CreateRead(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Creates JPEGLink and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <param name="pageObj">The page object.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PngImage">
            <summary>
            Summary description for PINGImage.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PngImage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PngImage.CreateRead(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Creates PngImage and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <param name="pageObj">The page object.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PngLink">
            <summary>
            Summary description for JPEGLink.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PngLink.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PngLink.CreateRead(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Creates PngLink and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <param name="pageObj">The page object.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ResourceItem">
            <summary>
            Summary description for ResourceItem.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.RoundRectEx">
            <summary>
            Extended version of RoundRect canvas item. It provides ability to change radius of each corner separately.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRectEx.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.RoundRectEx"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="edgeWidth">Width of the edge.</param>
            <param name="edgeHeight">Height of the edge.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRectEx.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.RoundRectEx"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="topLeftEdge">The top left edge.</param>
            <param name="topRightEdge">The top right edge.</param>
            <param name="bottomLeftEdge">The bottom left edge.</param>
            <param name="bottomRightEdge">The bottom right edge.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRectEx.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRectEx.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.RoundRectEx.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates RoundRectEx and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.TopLeftCornerWidth">
            <summary>
            Gets the width of the top left corner.
            </summary>
            <value>The width of the top left corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.TopLeftCornerHeight">
            <summary>
            Gets the height of the top left corner.
            </summary>
            <value>The height of the top left corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.BottomLeftCornerWidth">
            <summary>
            Gets the width of the bottom left corner.
            </summary>
            <value>The width of the bottom left corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.BottomLeftCornerHeight">
            <summary>
            Gets the height of the bottom left corner.
            </summary>
            <value>The height of the bottom left corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.TopRightCornerWidth">
            <summary>
            Gets the width of the top right corner.
            </summary>
            <value>The width of the top right corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.TopRigthCornerHeight">
            <summary>
            Gets the height of the top right corner.
            </summary>
            <value>The height of the top right corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.BottomRightCornerWidth">
            <summary>
            Gets the width of the bottom right corner.
            </summary>
            <value>The width of the bottom right corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.BottomRightCornerHeight">
            <summary>
            Gets the height of the bottom right corner.
            </summary>
            <value>The height of the bottom right corner.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.RoundRectEx.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Table">
            <summary>
            The Table CanvasItems contains an arrayList of TableRow Object which 
            contain an array list of TableCell Objects which contains an array list 
            of canvasItems.
            
            This class saves, load, and renders a table 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Table.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Table.BorderLines">
            <summary>
            Gets or sets the border lines.
            </summary>
            <value>The border lines.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Table.BaseTable">
            <summary>
            BaseTable
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Table.Rows">
            <summary>
            The Rows Property give you access to the rows of a the table control.
            </summary>
            <returns>TableRow</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Table.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.ToString">
            <summary>
            Summary description for ToString.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.CreateRead(GrapeCity.ActiveReports.Core.Document.IImagePersistenceService,System.IO.BinaryReader,System.Int16)">
            <summary>
            The CreateRead Method creates and reads in a Table object from a BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.Read(System.IO.BinaryReader,System.Int16)">
            <summary>
            The Read Method creates and reads in array of TableRows from a 
            BinaryReader.
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.ReadForClone(System.IO.BinaryReader,System.Int16)">
            <summary>
            This method is used only in clone method.
            The only difference is to call base.Read method, cause in standard scenario this call will be done 
            in outer methods.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Table.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            The Write Method writes an array of TableRows to a BinaryWriter.
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.DrawTextLink">
            <summary>
            Summary description for DrawTextLink.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawTextLink.#ctor(System.String[],System.Drawing.RectangleF,System.String,System.String[])">
            RS: CR 24033 - Add parameter to store fallback set of lines(when the align is set to 
            Justify and the report is exported into RDF 20)
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawTextLink.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawTextLink.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawTextLink.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates DrawTextLink and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
            <returns>DrawTextLink.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawTextLink.PageOffset">
            <summary>
            Gets the page offset.
            </summary>
            <returns>The page offset.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawTextLink.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawTextLink.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawTextLink.Link">
            <summary>
            Gets the link.
            </summary>
            <value>The link.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawTextLink.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.DrawText">
            <summary>
            Summary description for DrawText.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.QuoteString(System.String)">
            <summary>
            Returns the input string with enquoted special characters
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates DrawText and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.PageOffset">
            <summary>
            PageOffset
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText.IsTextSearchable">
            <summary>
            IsTextSearchable
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.Offset(System.Single,System.Single)">
            <summary>
            Offset
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText.SearchInit(System.Boolean)">
            <summary>
            SearchInit
            </summary>
            <param name="reverse"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.DrawText2">
            <summary>
            Summary description for DrawText2.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.#ctor">
            <summary>
            DrawText2
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.#ctor(System.String[],System.Single,System.Single,System.Single,System.Single,System.String[])">
            <summary>
            Constructor
            RS: CR 24033 - Add parameter to store fallback set of lines(when the align is set to 
            Justify and the report is exported into RDF 20)
            
            </summary>
            <param name="textArray"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="textArrayFallback"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.#ctor(System.String[],System.Single,System.Single,System.Single,System.Single)">
            <summary>
            RS: CR 24033 - Keep the old constructor signature for the back compatibility
            </summary>
            <param name="textArray"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            CreateRead
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.Read(System.IO.BinaryReader,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.PageOffset">
            <summary>
            PageOffset
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.IsTextSearchable">
            <summary>
            IsTextSearchable
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.SearchInit(System.Boolean)">
            <summary>
            SearchInit
            </summary>
            <param name="reverse"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawText2.Offset(System.Single,System.Single)">
            <summary>
            Offset
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.MeasureTextHeight">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawText2.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextOut">
            <summary>
            Summary description for TextOut.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextOut.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextOut.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextOut.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates TextOut and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TextOut.PageOffset">
            <summary>
            Gets the page offset.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextOut.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextOut.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextOut.X">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TextOut.Y">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TabStopsItem">
            <summary>
            Custom tab stops collection item (used in TableOfContents)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStops">
            <summary>
            Gets the tab stops.
            </summary>
            <value>The tab stops.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TabStopsItem.#ctor(GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStop[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.TabStopsItem"/> class.
            </summary>
            <param name="tabStops">The tab stops.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TabStopsItem.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TabStopsItem.CreateRead(System.IO.BinaryReader,System.Int16)">
            <summary>
            Creates CanvasItem and reads it from specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="fileVersion">The file version.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStop">
            <summary>
            Struct TabStop
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStop.Create(System.Single,System.String,GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStopTypes)">
            <summary>
            Creates the TabStop.
            </summary>
            <param name="position">The position.</param>
            <param name="leading">The leading.</param>
            <param name="type">The type.</param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStop.Position">
            <summary>
            The position
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStop.Leading">
            <summary>
            The leading
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStop.Type">
            <summary>
            The type
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStopTypes">
            <summary>
            The Tab Stop Types
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStopTypes.Left">
            <summary>
            The left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStopTypes.Center">
            <summary>
            The center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TabStopsItem.TabStopTypes.Right">
            <summary>
            The right
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.DataAvailableEventArgs">
            <summary>
            Summary description for DownLoadRequest.
            
            Usage:
            DownLoadRequest aRequest = new DownLoadRequest();
            aRequest.DataAvailable += new DataAvailableEventHandler(DataAvailableHandler);
            m_theRequest.StartDownload("The URI");
            
            also have
            m_theRequest.Wait();
            m_theRequest.Abort();	
            
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs">
            <summary>
            Class UrlErrorEventArgs.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs"/> class.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.UrlErrorEventHandler">
            <summary>
            Delegate UrlErrorEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:GrapeCity.ActiveReports.Document.Section.UrlErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.DownLoadRequest">
            <summary>
            Summary description for DownLoadRequest.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.DrawCanvas">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.Fonts">
            <summary>
            Summary description for Fonts Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.BackgroundStyle">
            <summary>
            BackgroundStyle
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.SelectFont(System.Int16)">
            <summary>
            SelectFont
            </summary>
            <param name="selectFontIn"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawRect
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawRect(System.Drawing.RectangleF)">
            <summary>
            DrawRect
            </summary>
            <param name="rc"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.FillRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            FillRect
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.FillRect(System.Drawing.RectangleF)">
            <summary>
            FillRect
            </summary>
            <param name="rc"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawRoundRect(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawRoundRect
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="edgeWidth"></param>
            <param name="edgeHeight"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.IsAlmostEqual(System.Single,System.Single,System.Single)">
            <summary>
            Compares two values with specified precision.
            </summary>
            <param name="precision">precision</param>
            <param name="value1">first value to compare</param>
            <param name="value2">second value to compare</param>
            <returns>true if both inequations are satisfied: value1 &gt; value2 - precision and value1 &lt; value2 + precision</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.IsAlmostEqual(System.Single,System.Single,System.Single,System.Single[])">
            <summary>
            Compares set of values with specified precision.
            </summary>
            <param name="precision">precision</param>
            <param name="value1">first value to compare</param>
            <param name="value2">second value to compare</param>
            <param name="values">additional values</param>
            <returns>true if all inequations are satisfied: value1 &gt; value<sub>n</sub> - precision and value1 &lt; value<sub>n</sub> + precision</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawRoundRect(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Renders rounded rect with different corner radiuses.
            </summary>
            <param name="precision">Parameter to specify when we should fail back to old round rect with equals corners</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawEllipse(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawEllipse
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawSvg(System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            DrawSvg
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="svg"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawText
            </summary>
            <param name="strText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String,System.Drawing.RectangleF)">
            <summary>
            DrawText
            </summary>
            <param name="strText"></param>
            <param name="text"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawTextFallback(System.String[],System.Single,System.Single,System.Single,System.Single,System.String[])">
            <summary>
            DrawText
            RS: CR 24033 - Add parameter to store fallback set of lines(when the align is set to 
            Justify and the report is exported into RDF 20)
            </summary>
            <param name="astrText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="astrTextFallback"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String[],System.Single,System.Single,System.Single,System.Single)">
            <summary>
            RS: CR 24033 - Keep the method with the old signature for the back compatibility
            </summary>
            <param name="astrText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String[],System.Drawing.RectangleF)">
            <summary>
            DrawText
            </summary>
            <param name="astrText"></param>
            <param name="text"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            DrawText
            </summary>
            <param name="strText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String,System.Drawing.RectangleF,System.String)">
            <summary>
            DrawText
            </summary>
            <param name="strText"></param>
            <param name="text"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawTextFallback(System.String[],System.Single,System.Single,System.Single,System.Single,System.String,System.String[])">
            <summary>
            DrawText
            RS: CR 24033 - Add parameter to store fallback set of lines(when the align is set to 
            Justify and the report is exported into RDF 20)
            </summary>
            <param name="astrText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="strLink"></param>
            <param name="astrTextFallback"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String[],System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            RS: CR 24033 - Keep the old method signature for the back compatibility
            </summary>
            <param name="astrText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawText(System.String[],System.Drawing.RectangleF,System.String)">
            <summary>
            DrawText
            </summary>
            <param name="astrText"></param>
            <param name="text"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="title"></param>
            <param name="description"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="strLink"></param>
            <param name="title"></param>
            <param name="description"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="managedImage"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Boolean,System.Drawing.RectangleF)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="managedImage"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="managedImage"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.String)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="bounds"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawImage(System.Drawing.Image,System.Boolean,System.Drawing.RectangleF,System.String)">
            <summary>
            DrawImage
            </summary>
            <param name="image"></param>
            <param name="imageChanged"></param>
            <param name="text"></param>
            <param name="strLink"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawTable(System.Drawing.RectangleF)">
            <summary>
            The DrawTable Method allows to draw a table control to a page.
            </summary>
            <param name="bounds"></param>
            <returns>PageTable</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.IntersectClip(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            IntersectClip
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawLine
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawBorder(GrapeCity.ActiveReports.Border,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            DrawBorder
            </summary>
            <param name="border"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawBorder(GrapeCity.ActiveReports.Border,System.Drawing.RectangleF)">
            <summary>
            DrawBorder
            </summary>
            <param name="border"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.DrawBorder(GrapeCity.ActiveReports.Border,System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            For Internal use only
            
            Used in rtf table border rendering
            </summary>
            <param name="border">Border</param>
            <param name="bounds">Border bounds</param>
            <param name="bWidthT">Top border in pixels</param>
            <param name="bWidthL">Left border in pixels</param>
            <param name="bWidthB">Bottom border in pixels</param>
            <param name="bWidthR">Right border in pixels</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.TextAlignment">
            <summary>
            TextAlignment
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.VerticalTextAlignment">
            <summary>
            VerticalTextAlignment
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.Units">
            <summary>
            Units
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.WrapMode">
            <summary>
            Gets or sets the wrap mode.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.CharacterSpacing">
            <summary>
            Character Spacing in inches. Could be negative.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.ScaleX">
            <summary>
            Minimal character condensed rate (from 0.1 to 1).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.LineSpacing">
            <summary>
            Line height in inches
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.PenWidth">
            <summary>
            PenWidth
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.PenStyle">
            <summary>
            PenStyle
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.TextAngle">
            <summary>
            TextAngle
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.TabStops">
            <summary>
            Custom tab stops collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.RightToLeft">
            <summary>
            RightToLeft
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.DrawCanvas.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.DrawCanvas.SetTextBoundsRange(System.Single,System.Single)">
            <summary>
            Set text top/bottom bounds range.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ICanvasItemsModifier">
            <summary>
            Interface ICanvasItemsModifier
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.ICanvasItemsModifier.InsertCanvasItem(System.Int32,GrapeCity.ActiveReports.Document.Section.CanvasItem)">
            <summary>
            Inserts the canvas item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Units">
            <summary>
            Represents the unit of measure of the document when using the low level rendering API on the document page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Units.Centimeters">
            <summary>
            Specify the parameters of the page drawing method in centimeters.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Units.Inches">
            <summary>
            Specify the parameters of the page drawing method in inches.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Units.Pixels">
            <summary>
            Specify the parameters of the page drawing method in pixels.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.Units.Document">
            <summary>
            Specify the parameters of the page rendering method with the document's own unit (1/300 inch).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.BackgroundStyle">
            <summary>
            Represents the background style when using the lower level page rendering API.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.BackgroundStyle.Transparent">
            <summary>
            The background becomes transparent. Objects in the background can be seen through.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.BackgroundStyle.Opaque">
            <summary>
            Fill the background. Objects in the background are transparent.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PageOrientation">
            <summary>
            Indicates the orientation of the page when outputting to the printer.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PageOrientation.Default">
            <summary>
            Follow the printer's default settings.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PageOrientation.Portrait">
            <summary>
            Print pages in portrait orientation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PageOrientation.Landscape">
            <summary>
            Print page in landscape orientation.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PenStyles">
            <summary>
            Represents the type of pen used when drawing lines on a page.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PenStyles.Transparent">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PenStyles.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PenStyles.Dash">
            <summary>
            Dash styled line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PenStyles.Dot">
            <summary>
            Dot styled line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PenStyles.DashDot">
            <summary>
            DashDot styled line.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PenStyles.DashDotDot">
            <summary>
            DashDotDot styled line.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.ControlType">
            <summary>
            Specifies control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.None">
            <summary>
            None control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Label">
            <summary>
            Label control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Textbox">
            <summary>
            Textbox control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Checkbox">
            <summary>
            Checkbox control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Custom">
            <summary>
            Custom control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Picture">
            <summary>
            Picture control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Line">
            <summary>
            Line control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Shape">
            <summary>
            Shape control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.RichText">
            <summary>
            RichText control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.SubReport">
            <summary>
            SubReport control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.PageBreak">
            <summary>
            PageBreak control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Barcode">
            <summary>
            Barcode control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.OleObject">
            <summary>
            OleObject control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Table">
            <summary>
            Table control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.Chart">
            <summary>
            Chart control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.ReportInfo">
            <summary>
            ReportInfo control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.CrossSectionBox">
            <summary>
            CrossSectionBox control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.CrossSectionLine">
            <summary>
            CrossSectionLine control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.InputFieldText">
            <summary>
            Input field text control type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.ControlType.InputFieldCheckBox">
            <summary>
            Input field checkBox control type
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SectionType">
            <summary>
            Specifies report section type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.ReportHeader">
            <summary>
            The report header
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.PageHeader">
            <summary>
            The page header
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.GroupHeader">
            <summary>
            The group header
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.Detail">
            <summary>
            The detail
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.GroupFooter">
            <summary>
            The group footer
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.PageFooter">
            <summary>
            The page footer
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SectionType.ReportFooter">
            <summary>
            The report footer
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.InputTextAlign">
            <summary>
            Alignment for text input fields
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.InputBorderStyle">
            <summary>
            Border styles for input fields
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.InputBorderStyle.None">
            <summary>No border.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.InputBorderStyle.Solid">
            <summary>Solid border.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.InputBorderStyle.Dashed">
            <summary>Dashed border.</summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.InputBorderStyle.Inset">
            <summary>
            Inset, a simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.InputCheckStyle">
            <summary>
            Check styles for checkBox input fields
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.Margins">
            <summary>
            Class Margins.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Margins.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.Margins"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Margins.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.Margins"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <exception cref="T:System.ArgumentException">
            Left margin value must be greater than 0
            or
            Top margin value must be greater than 0
            or
            Right margin value must be greater than 0
            or
            Bottom margin value must be greater than 0
            </exception>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Margins.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Margins.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Margins.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.Margins.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.Margins.Changed">
            <summary>
            Occurs when [changed].
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Margins.RaiseChanged">
            <summary>
            RaiseChanged
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Margins.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.Margins.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PageCell">
            <summary>
            Summary description for PageCell.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PageCell.attributes">
            <summary>
            TableCellAttributes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.PageCell.tagName">
            <summary>
             Tag Name
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.PageCell.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.#ctor">
            <summary>
            TextCell
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.SetResource(GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Set resource from existing page.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.SetResource(GrapeCity.ActiveReports.Document.Section.DrawCanvas)">
            <summary>
            Set resource from canvas.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Page">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.FileVersion">
            <summary>
            FileVersion
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Align">
            <summary>
            Align
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.VAlign">
            <summary>
            VAlign
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.ColSpan">
            <summary>
            ColSpan
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.RowSpan">
            <summary>
            RowSpan
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.TagName">
            <summary>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.Clone">
            <summary>
            Clone - make a deep copy
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Site">
            <summary>
            Site Property
            <para>
            	<br/>This is now the CellContent can get access to the table and cell's
            	attributes
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#StartingColumn">
            <summary>
            StartingColumn Property
            <para>
            	<br/>Is the starting column of this cell in the owning table
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#StartingRow">
            <summary>
            StartingRow
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CellSpacing">
            <summary>
            CellSpacing
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ActualWidth">
            <summary>
            ActualWidth Property
            <para>
            	<br/>This is the size that the ICellContent must render it's contents
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ActualHeight">
            <summary>
            ActualHeight Property
            <para>
            	<br/>This is the size that the ICellContent must render it's contents
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#Bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#ResetLayoutData">
            <summary>
            ResetLayoutData
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.System#IComparable#CompareTo(System.Object)">
            <summary>
            CompareTo
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CalculateMinWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            CalculateMinSize Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is minimum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CalculateMaxWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            CalculateMaxSize Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is maximum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IInternalTableCell#CalculateHeight(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Single)">
            <summary>
            CalculateHeight
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.SplitHorizontally(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Int32)">
            <summary>
            SplitHorizontally
            </summary>
            <param name="splitColumnIntoColumns"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.SplitVertically(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Int32)">
            <summary>
            SplitVertically
            </summary>
            <param name="splitRowIntoRows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageCell.Delete(GrapeCity.ActiveReports.Core.Document.DeviceInfo)">
            <summary>
            Delete
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.PageDoubleLineExtensions">
            <summary>
            Provides extension methods for <see cref="T:GrapeCity.ActiveReports.Core.Document.Page"/>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageDoubleLineExtensions.DrawDoubleLine(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the double line.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageDoubleLineExtensions.DrawEllipseDoubleLine(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the double line ellipse.
            </summary>
            <param name="canvas">The canvas where ellipse to be drawn.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageDoubleLineExtensions.DrawRoundRectDoubleLine(GrapeCity.ActiveReports.Document.Section.DrawCanvas,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the double line round rect.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="topLeftEdge">Top Left edge.</param>
            <param name="topRightEdge">Top Right edge.</param>
            <param name="bottomLeftEdge">Bottom Left edge.</param>
            <param name="bottomRightEdge">Bottom Right Edge.</param>
            <param name="precision">Parameter to specify when we should fail back to old round rect with equals corners</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
            <value>The summary.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
            <value>The cell spacing.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Rules">
            <summary>
            Gets or sets the rules.
            </summary>
            <value>The rules.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Border">
            <summary>
            Gets or sets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Rows">
            <summary>
            Gets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.PageTable.BorderLines">
            <summary>
            Sets the border lines.
            </summary>
            <value>The border lines.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageTable.SuspendLayout">
            <summary>
            Suspends the layout.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageTable.ResumeLayout">
            <summary>
            Resumes the layout.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.PageTable.PerformLayout">
            <summary>
            Performs the layout.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.State">
            <summary>
            Enum State
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.State.InProgress">
            <summary>
            The in progress
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.State.Finished">
            <summary>
            The finished
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.StateChangedArgs">
            <summary>
            Document.StateChanged event arguments
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.StateChangedArgs.#ctor(GrapeCity.ActiveReports.Document.Section.State)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.StateChangedArgs"/> class.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.StateChangedArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.StateChangedArgs"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.StateChangedArgs.State">
            <summary>
            Gets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.StateChangedArgs.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextAlignment">
            <summary>
            Enum TextAlignment
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextAlignment.Left">
            <summary>
            The left
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextAlignment.Center">
            <summary>
            The center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextAlignment.Right">
            <summary>
            The right
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextAlignment.Justify">
            <summary>
            The justify
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.VerticalTextAlignment">
            <summary>
            Enum VerticalTextAlignment
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.VerticalTextAlignment.Top">
            <summary>
            The top
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.VerticalTextAlignment.Middle">
            <summary>
            The middle
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.VerticalTextAlignment.Bottom">
            <summary>
            The bottom
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextJustify">
            <summary>
            Represents the text justification.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextJustify.Auto">
            <summary>
            Defines the  justification algorithm that is determined automatically.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextJustify.Distribute">
            <summary>
            Defines the newspaper-like distribution except the last line of text which is not modified.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextJustify.DistributeAllLines">
            <summary>
            Defines the newspaper-like distribution including the last line.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.WrapMode">
            <summary>
            Specifies whether the text is written from left to right or right to left.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.WrapMode.NoWrap">
            <summary>
            No text wrap.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.WrapMode.WordWrap">
            <summary>
            Wrap by word boundaries 
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.WrapMode.CharWrap">
            <summary>
            Per-character wrapping mode.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SaveOptions">
            <summary>
            Enum VerticalTextAlignment
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SaveOptions.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.SaveOptions.Compressed">
            <summary>
            The compressed
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.FindResult">
            <summary>
            FindResult
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.FindResult.Found">
            <summary>
            The found
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.FindResult.BeginningOfPages">
            <summary>
            The beginning of pages
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.FindResult.EndOfPages">
            <summary>
            The end of pages
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.RdfFormat">
            <summary>
            Represents the file format used for saving report documents.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.RdfFormat.AR20">
            <summary>
            ActiveX version of ActiveReports 2.0 file format. This member is left for compatibility.
            It is not supported to display the report outputted in this format with the ActiveX viewer control contained in "ActiveReports 2.0J" of ActiveX product or "ActiveReports for .NET 3.0J" of .NET product.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.RdfFormat.ARNet">
            <summary>
            ActiveReports for. NET file format.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.CanvasType">
            <summary>
            The enum of canvas types.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.LineItem">
            <summary>
            LineItem canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.Rect">
            <summary>
            Rect canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.ForeColor">
            <summary>
            ForeColor canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.BackColor">
            <summary>
            BackColor canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.TextOut">
            <summary>
            TextOut canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.DrawText">
            <summary>
            DrawText canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SelectFont">
            <summary>
            SelectFont canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EnhMeta">
            <summary>
            EnhMeta canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignLeft">
            <summary>
            AlignLeft canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignRight">
            <summary>
            AlignRight canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignCenter">
            <summary>
            AlignCenter canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.TextAngle">
            <summary>
            TextAngle canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignTop">
            <summary>
            AlignTop canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignMiddle">
            <summary>
            AlignMiddle canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignBottom">
            <summary>
            AlignBottom canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PenStyle">
            <summary>
            PenStyle canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.Border">
            <summary>
            Border canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PenWidth">
            <summary>
            PenWidth canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.BackStyleTransparent">
            <summary>
            BackStyleTransparent canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.BackStyleOpaque">
            <summary>
            BackStyleOpaque canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.Ellipse">
            <summary>
            Ellipse canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.RoundRect">
            <summary>
            RoundRect canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.FillRect">
            <summary>
            FillRect canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.IntersectClip">
            <summary>
            IntersectClip canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PushClipRect">
            <summary>
            PushClipRect canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PopClipRect">
            <summary>
            PopClipRect canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.ResetContext">
            <summary>
            ResetContext canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.DrawText2">
            <summary>
            DrawText2 canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.Extension">
            <summary>
            Extension canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.DrawTextLink">
            <summary>
            DrawTextLink canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EnhMetaLink">
            <summary>
            EnhMetaLink canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.WordWrapOn">
            <summary>
            WordWrapOn canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.WordWrapOff">
            <summary>
            WordWrapOff canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JPEG">
            <summary>
            JPEG canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JPEGLink">
            <summary>
            JPEGLink canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PING">
            <summary>
            PING canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.PINGLink">
            <summary>
            PINGLink canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.AlignJustify">
            <summary>
            AlignJustify canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.LeftToRight">
            <summary>
            LeftToRight canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.RightToLeft">
            <summary>
            RightToLeft canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.Resource">
            <summary>
            Resource canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.ControlInfo">
            <summary>
            ControlInfo canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.Table">
            <summary>
            Table canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.VerticalText">
            <summary>
            VerticalText canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SectionInfo">
            <summary>
            SectionInfo canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.ControlInfoEnd">
            <summary>
            ControlInfoEnd canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SectionInfoEnd">
            <summary>
            SectionInfoEnd canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EvaluationStart">
            <summary>
            EvaluationStart canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.EvaluationEnd">
            <summary>
            EvaluationEnd canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SetCharacterSpacing">
            <summary>
            SetCharacterSpacing canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SetLineSpacing">
            <summary>
            SetLineSpacing canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JustifyDistribute">
            <summary>
            JustifyDistribute canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.JustifyDistributeAllLines">
            <summary>
            JustifyDistributeAllLines canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SetPadding">
            <summary>
            SetPadding canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.TextRenderHint">
            <summary>
            TextRenderHint canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.WrapMode">
            <summary>
            WrapMode canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.TextInfo">
            <summary>
            TextInfo canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.RoundRectEx">
            <summary>
            RoundRectEx canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.TabStops">
            <summary>
            TabStops canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SetScaleX">
            <summary>
            SetMinCondenseRate canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.TextBoundsRange">
            <summary>
            Text top/bottom bounds range canvas type
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.InputFieldText">
            <summary>
            Text field
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.InputFieldCheckBox">
            <summary>
            CheckBox field
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.CanvasType.SVG">
            <summary>
            SVG field
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.TextRenderHint">
            <summary>
            Hint options for TextRenderHint canvas item
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextRenderHint.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Document.Section.TextRenderHint.Autoshrink">
            <summary>
            The autoshrink
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.SyncImage">
            <summary>
            Image wrapped to provide synchronize concurrent access to Image class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SyncImage.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of SyncImage class
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SyncImage.#ctor(System.Drawing.Image,System.Boolean)">
            <summary>
            Initializes a new instance of SyncImage class.
            </summary>
            <param name="image"></param>
            <param name="bUnused"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.SyncImage.Image">
            <summary>
            Gets the image
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.SyncImage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Document.Section.UserPreferences">
            <summary>
            UserPreference.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Document.Section.UserPreferences.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Document.Section.UserPreferences.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Document.Section.UserPreferences"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UserPreferences.SearchResultsForeColor">
            <summary>
            Gets or sets the forecolor of the search results.
            </summary>
            <value>The color of the search results fore.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UserPreferences.SearchResultsBackColor">
            <summary>
            Gets or sets the backcolor of the search results.
            </summary>
            <value>The color of the search results back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UserPreferences.HyperLinkForeColor">
            <summary>
            Gets or sets the forecolor of the hyper link.
            </summary>
            <value>The color of the hyper link fore.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UserPreferences.HyperLinkBackColor">
            <summary>
            Gets or sets the backcolor of the hyper link.
            </summary>
            <value>The color of the hyper link back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UserPreferences.HyperLinkUnderline">
            <summary>
            Gets or sets a value indicating whether [hyper link underline].
            </summary>
            <value><c>true</c> if [hyper link underline]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Document.Section.UserPreferences.UseHyperLinkSettings">
            <summary>
            If True, these settings will be applied to links. Otherwise, each link will be displayed according to their own settings.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableLayoutType">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableLayoutType.AutoLayout">
            <summary>
            Think of it as the auto width layout
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableLayoutType.FixedLayout">
            <summary>
            Think of it as the fixed width layout
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellEventArgs">
            <summary>
            CellEventArgs
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellAddedEventHandler">
            <summary>
             Called when a cell is added to the table
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellRemovedEventHandler">
            <summary>
            Called when a cell is removed to the table
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BeforeCellCalculateWidthEventHandler">
            <summary>
            Called before a cell's width is calculated 
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BeforeCellCalculateHeightEventHandler">
            <summary>
            Called before a cell's height is calculated
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BeforeCellSetBoundsEventHandler">
            <summary>
            Called before cell's bounds are set
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowEventArgs">
            <summary>
            RowEventArgs
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAddedEventHandler">
            <summary>
            Fired after a row is added 
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowRemovedEventHandler">
            <summary>
            Fired when a row is removed
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnEventArgs">
            <summary>
            ColumnEventArgs
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAddedEventHandler">
            <summary>
            Fired after a column is added 
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnRemovedEventHandler">
            <summary>
            Fired when a column is removed
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable">
            <summary>
            BaseTable Class.
            <para>
            <br/>The Base Table Class implements basic layout and hitTesting for the 
            a table type control.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.rows">
            <summary>
            A collection of rows.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.columns">
            <summary>
            A collection of columns.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CalculateOutsideBorder">
            <summary>
            CalculateOutsideBorder
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Bounds">
            <summary>
            Bounds Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CellSpacingLeft">
            <summary>
            CellSpacingLeft Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CellSpacingRight">
            <summary>
            CellSpacingRight Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CellSpacingBottom">
            <summary>
            CellSpacingBottom Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.VerticalLines">
            <summary>
            VerticalLines Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.HorizontalLines">
            <summary>
            HorizontalLines Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.LayoutColumns">
            <summary>
            LayoutColumns
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.LayoutRows">
            <summary>
            LayoutRows
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.FixedWidth">
            <summary>
            Special table layout boolean that forces the table to be a certain width.  
            This was put in for ActiveReports Design time.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Summary">
            <summary>
            Summary property 
            Is a description of the table in words
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CellPadding">
            <summary>
            CellPadding
            Is an area around the contents of a cell
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CellSpacing">
            <summary>
            CellSpacing
            Is an area between edges of the cells
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Rules">
            <summary>
            Rules
            this is what html calls the borders around cells
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Border">
            <summary>
            Border
            This is the border around the table
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.TableLayout">
            <summary>
            TableLayout
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Attributes">
            <summary>
            Attributes Property
            
            This an object that contains the attributes of the table.  
            ex CellSpacing, CellPadding, etc.
            </summary>
            <value>TableAttributes</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Rows">
            <summary>
            Rows Property
            </summary>
            <value>RowCollection</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Columns">
            <summary>
            Columns Property
            </summary>
            <value>ColumnCollection</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.BorderLines">
            <summary>
            BorderLines
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.TableRender">
            <summary>
            If someone want to change how a table is rendered all they have
            to do is implement the ITableRender Interface and set this property 
            to an instance of their implementation.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.SuspendLayout">
            <summary>
            SuspendLayout Method 
            <para><br/>Sets a flag that is used to subpend the table from laying out 
            table's cells.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.ResumeLayout">
            <summary>
            ResumeLayout Method
            <para><br/>Sets the suspendLayout flag to false and calls the tables
            layout method to layout the table.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.ResumeLayout(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            ResumeLayout Method
            <para><br/>Sets the suspendLayout flag to false and calls the tables
            layout method to layout the table.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.PerformLayout(GrapeCity.ActiveReports.Core.Document.DeviceInfo)">
            <summary>
            ResumeLayout Method
            <para><br/>Sets the suspendLayout flag to false and calls the tables
            layout method to layout the table.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CalculateNumberOfColumns">
            <summary>
            CalculateNumberOfColumns Method
            <para><br/>Calculate an estimate of the number of Columns that is 
            required for the table
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CalculateNumberOfRows(System.Collections.ArrayList)">
            <summary>
            CalculateNumberOfRows Method
            <para><br/>Calculate an estimate of the number of Rows that is 
            required for the table.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.HitTest(System.Single,System.Single)">
            <summary>
            HitTest
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save
            </summary>
            <param name="writer"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.WriteXml(System.Xml.XmlElement)">
            <summary>
            	The WriteXml Method implements the WriteXml Method of 
            Design.IPersistControl Interface.
            
            	This method saves the table in the rpx format used my the 
            ARNET report designer.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.ReadXml(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Xml.XmlNode)">
            <summary>
            	The ReadXml Method implements the ReadXml Method of 
            Design.IPersistControl Interface.
            
            	This method reads in the rpx format used by the designer 
            to reconstruct the table control.
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.FindCellRow(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            FindCellRow
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.FindCellRowIndex(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            FindCellRowIndex
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.LayoutInfo">
            <summary>
            LayoutInfo
            
            This structure is used to pass information to the different mehtods that layout and draw 
            the table.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.LayoutInfo.CalculateCommonTableValues(GrapeCity.ActiveReports.Core.Document.DeviceInfo,GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable)">
            <summary>
            CalculateCommonTableValues
            </summary>
            <param name="deviceInfo"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnCellAdded(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            OnCellAdded
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnCellRemoved(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            OnCellRemoved
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnRowAdded(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            OnRowAdded
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnRowRemoved(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            OnRowRemoved
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnColumnAdded(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            OnColumnAdded
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnColumnRemoved(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            OnColumnRemoved
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CalculateRowAndTableHeight(GrapeCity.ActiveReports.Core.Document.DeviceInfo)">
            <summary>
            CalculateRowAndTableHeight
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.ClearLastRow">
            <summary>
            ClearLastRow
            
            Used by the reporting engine
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.AssignCellsToColumnsAndRows(System.Single)">
            <summary>
            AssignCellsToColumnsAndRows
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.GenerateHitTestLines">
            <summary>
            GenerateHitTestLines
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.GenerateDesignTimeLines">
            <summary>
            GenerateDesignTimeLines
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.GenerateBorderLines(System.Single)">
            <summary>
            GenerateBorderLines
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.InitializeTableLayout">
            <summary>
            InitializeTableLayout
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.LayoutCells">
            <summary>
            LayoutCells
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.CalculateRowBounds">
            <summary>
            CalculateRowBounds
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnAutoLayout(GrapeCity.ActiveReports.Core.Document.DeviceInfo)">
            <summary>
            OnAutoLayout
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable.OnFixedLayout(GrapeCity.ActiveReports.Core.Document.DeviceInfo)">
            <summary>
            OnAutoLayout
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellAlignmentTypes">
            <summary>
            Specifies how text will be aligned in a table cell
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellAlignmentTypes.Near">
            <summary>
            Near
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellAlignmentTypes.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellAlignmentTypes.Far">
            <summary>
            Far
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection">
            <summary>
            CellCollection.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.disposed">
            <summary>
            Determines if resources were disposed or not.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.disposing">
            <summary>
            Determines release type.<c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.#ctor">
            <summary>
            Default Constructor for CellCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Table">
            <summary>
            Table Property
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load Method
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IQuickSaveAndLoad#QuickSave(System.IO.BinaryWriter)">
            <summary>
            Save Method
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IQuickSaveAndLoad#QuickLoad(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.IO.BinaryReader)">
            <summary>
            Load Method
            </summary>
            <param name="deviceInfo"></param>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            </summary>
            <param name="cellsNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Method
            </summary>
            <param name="cellsNode"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Item(System.Int32)">
            <summary>
            Item Property
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Contains(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            Contains Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.CopyTo(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell[],System.Int32)">
            <summary>
            CopyTo Method
            </summary>
            <param name="values"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.IndexOf(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            IndexOf Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Add(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            Add Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.AddRange(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell[])">
            <summary>
            AddRange Method
            </summary>
            <param name="cells"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.AddRange(GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection)">
            <summary>
            AddRange Method
            </summary>
            <param name="cells"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Insert(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            Insert Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection)">
            <summary>
            InsertRange Method
            </summary>
            <param name="index"></param>
            <param name="cells"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell[])">
            <summary>
            InsertRange Method
            </summary>
            <param name="index"></param>
            <param name="cells"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Remove(System.Object)">
            <summary>
            Remove Method
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            OnInsertComplete Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            OnRemoveComplete Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.OnClear">
            <summary>
            OnClear Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.OnClearComplete">
            <summary>
            OnClearComplete Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.ToString">
            <summary>
            ToString Method
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.PropertyChangedHandler(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChangedHandler Method
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.ShallowClone">
            <summary>
            ShallowClone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellCollection.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellPadding">
            <summary>
            CellPadding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellPadding.SameAsWholeTable">
            <summary>
            SameAsWholeTable
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellPadding.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Methods
            <para><br/>Loads the attribute information into a XmlElement Node.
            This method is used to save the table information into rpx format for the 
            designer.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellPadding.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Methods
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellPadding.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            <para><br/>Loads the attribute information into a BinaryReader.</para>
            </summary>
            <param name="reader"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellSite">
            <summary>
            Summary description for CellSite.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellSite.#ctor(GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable,GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell)">
            <summary>
            CellSite
            </summary>
            <param name="table"></param>
            <param name="tableCell"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellSite.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CellSite.TableCell">
            <summary>
            TableCell
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column">
            <summary>
            Column Class
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.PropertyChanged">
            <summary>
            PropertyChanged
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.table">
            <summary>
            Base table.
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.attributes">
            <summary>
            attributes
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.#ctor">
            <summary>
            Column
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Table">
            <summary>
            Table
            <para>
            	<br/>A reference to the table object
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            <para>
            	<br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.
            </para>
            </summary>
            <param name="cellsNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para>
            	<br/>Reads in table information from the designers rpx xml format.
            </para>
            </summary>
            <param name="RowNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.ShallowClone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            OnPropertyChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes">
            <summary>
            ColumnAttributes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.disposed">
            <summary>
            Dispose flag.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Width">
            <summary>
            Width property
            <para><br/>Specifies the width of the table.  This property will 
            mostly be removed</para>
            </summary>
            <value>
            UnitValue
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.BackColor">
            <summary>
            Gets or sets the backcolor.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.ForeColor">
            <summary>
            Gets or sets the forecolor.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            <para><br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.</para>
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.ShallowClone">
            <summary>
            ShallowClone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnAttributes.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            OnPropertyChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection">
            <summary>
            ColumnCollection Class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.#ctor">
            <summary>
            ColumnCollection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Table">
            <summary>
            Table Property
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Method
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Item(System.Int32)">
            <summary>
            Item Property 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Contains(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            Contains Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.CopyTo(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column[],System.Int32)">
            <summary>
            CopyTo Method
            </summary>
            <param name="values"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.IndexOf(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            IndexOf Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Add(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            Add Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.AddRange(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column[])">
            <summary>
            AddRange Method
            </summary>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.AddRange(GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection)">
            <summary>
            AddRange Method
            </summary>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Insert(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            Insert Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection)">
            <summary>
            InsertRange Method
            </summary>
            <param name="index"></param>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column[])">
            <summary>
            InsertRange Method
            </summary>
            <param name="index"></param>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            OnInsertComplete Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            OnRemoveComplete Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.OnClearComplete">
            <summary>
            OnClearComplete Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.Remove(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Column)">
            <summary>
            Remove Method
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.ToString">
            <summary>
            ToString Method
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ColumnCollection.PropertyChangedHandler(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChangedHandler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CompareRowCells">
            <summary>
            CompareRowCells
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.CompareRowCells.Compare(System.Object,System.Object)">
            <summary>
            Compare
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges">
            <summary>
            Class Edges.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges"/> class.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.disposed">
            <summary>
            The disposed flag
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.CalculateValues(System.Single,System.Single)">
            <summary>
            CalculateValues
            </summary>
            <param name="dpiX"></param>
            <param name="containersWidth"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.CalculatedLeft">
            <summary>
            CalculatedLeft
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.CalculatedTop">
            <summary>
            CalculatedTop
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.CalculatedRight">
            <summary>
            CalculatedRight
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.CalculatedBottom">
            <summary>
            CalculatedBottom
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            <para><br/>Loads the attribute information into a BinaryReader.</para>
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.WriteXml(System.Xml.XmlElement,System.String)">
            <summary>
            WriteXml Methods
            <para><br/>Loads the attribute information into a XmlElement Node.
            This method is used to save the table information into rpx format for the 
            designer.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.ReadXml(System.Xml.XmlNode,System.String)">
            <summary>
            ReadXml Methods
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.PropertyChangedEventHandler(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChangedEventHandler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Edges.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow">
            <summary>
            FooterRow
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.#ctor(System.Int32)">
            <summary>
            Row Constructor
            </summary>
            <param name="type">The type of the row</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.RepeatOnNewPage">
            <summary>
            Gets or sets a value indicating whether [repeat on new page].
            </summary>
            <value><c>true</c> if [repeat on new page]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.QuickLoad(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.IO.BinaryReader)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            <para>
            	<br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.
            </para>
            </summary>
            <param name="cellsNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para>
            	<br/>Reads in table information from the designers rpx xml format.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.ShallowClone">
            <summary>
            ShallowClone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.FooterRow.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow">
            <summary>
            HeaderRow
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.#ctor(System.Int32)">
            <summary>
            Row Constructor
            </summary>
            <param name="type">The type of the row</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.RepeatOnNewPage">
            <summary>
            Gets or sets a value indicating whether [repeat on new page].
            </summary>
            <value><c>true</c> if [repeat on new page]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.QuickSave(System.IO.BinaryWriter)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.QuickLoad(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.IO.BinaryReader)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            <para>
            	<br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para>
            	<br/>Reads in table information from the designers rpx xml format.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.ShallowClone">
            <summary>
            ShallowClone
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HeaderRow.Clone">
            <summary>
            Clone
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine">
            <summary>
            HorizontalLine class.
            <para>
            	<br/>This class represents a horizontal line that separate cells in a table.  This class
            	is used for hittesting.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.#ctor">
            <summary>
            HorizontalLine
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.UpperCells">
            <summary>
            UpperCells
            <para>
            	<br/>A list of cells that touches a horizontal line that separates cells from the top of
            	the line.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.LowerCells">
            <summary>
            LowerCells
            <para>
            	<br/>A list of cells that touches a horizontal line that separates cells from the bottom of 
            	the line.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.PrevLine">
            <summary>
            PrevLine
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.NextLine">
            <summary>
            NextLine
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.Bounds">
            <summary>
            Bounds
            <para>
            	<br/>Is the bounding rectangle for a horizontal line.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.Reset">
            <summary>
            Reset
            <para>
            	<br/>Clears the left and right list of cells for a horizontal line.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLine.ToString">
            <summary>
            ToString Method
            </summary>
            <para>
            	<br/>A string that represent the vertical line mainly for debugging
            </para>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.HorizontalLineCollection">
            <summary>
            HorizontalLineCollection
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent">
            <summary>
            ICellContent
            <para>
            	<br/>This interface is used so a table cell can interact with it's 
            	contents.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.ActualWidth">
            <summary>
            ActualSize Property
            <para>
            	<br/>This is the size that the ICellContent must render it's contents
            	too.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.ActualHeight">
            <summary>
            ActualSize Property
            <para>
            	<br/>This is the size that the ICellContent must render it's contents
            	too.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.Site">
            <summary>
            Site Property
            <para>
            	<br/>This is now the CellContent can get access to the table and cell's
            	attributes
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.Tag">
            <summary>
            Tag Property
            <para>
            	<br/>Any additional info that you want the cell to have.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.CalculateMinWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            CalculateMinSize Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is minimum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.CalculateMaxWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            CalculateMaxSize Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is maximum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.CalculateHeight(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Single)">
            <summary>
            CalculateHeight Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is maximum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.Render(GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext)">
            <summary>
            Render Method
            <para>
            	<br/>This method is called when the table is asked to render it's
            	self.  The CellContent must render it's self to/using the render 
            	context.  The RenderContext could be a graphics object, 
            	HtmlTextWriter,	just about anything.  The method could even be 
            	used possibility to save the object state information.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Method
            <para>
            	<br/>Reads in table information from the designers rpx xml format.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellContent.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            <para>
            	<br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellSite">
            <summary>
            ICellSite Interface 
            <para><br/>This interface is used so the cell and cellcontents can get
            information from the table the cell</para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellSite.TableCell">
            <summary>
            TableCell
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ICellSite.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell">
            <summary>
            Summary description for IInternalTableCell.
            <para>
            	<br/>This part is the internal part of a table.  
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.Site">
            <summary>
            Site Property
            <para>
            	<br/>This is now the CellContent can get access to the table and cell's
            	attributes
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.StartingColumn">
            <summary>
            StartingColumn Property
            <para>
            	<br/>Is the starting column of this cell in the owning table
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.StartingRow">
            <summary>
            StartingRow Property
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.ActualWidth">
            <summary>
            ActualWidth Property
            <para>
            	<br/>This is the size that the ICellContent must render it's contents
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.ActualHeight">
            <summary>
            ActualHeight Property
            <para>
            	<br/>This is the size that the ICellContent must render it's contents
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.MinWidth">
            <summary>
            MinWidth Property
            <para>
            	<br/>This is the min content width of the cell
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.MaxWidth">
            <summary>
            MaxWidth Property
            <para>
            	<br/>This is the max content width of the cell
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.Height">
            <summary>
            Height Property
            <para>
            	<br/>This is the height of the cell content
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.CellSpacing">
            <summary>
            CellSpacing Property
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.Bounds">
            <summary>
            Bounds Property
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.ResetLayoutData">
            <summary>
            ResetLayoutData Method
            <para>
            	<br/>It is very important that you reset all of the layout information in this
            	method
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.CalculateMinWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            CalculateMinWidth Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is minimum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.CalculateMaxWidth(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Boolean)">
            <summary>
            CalculateMaxWidth Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is maximum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.CalculateHeight(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Single)">
            <summary>
            CalculateHeight Method
            <para>
            	<br/>Is call when the table's is laying out it's rows and cells, 
            	the CellContent must calculate is maximum size.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load Method
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Method
            <para>
            	<br/>Reads in table information from the designers rpx xml format.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            <para>
            	<br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IInternalTableCell.ShallowClone">
            <summary>
            ShallowClone - make a shallow copy
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.IRenderContext">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell">
            <summary>
            ITableCell Interface.
            <para>
            	<br/>This is the public part of a table cell; this is the public part of 
            	a TableCell.  These properties will be visible to a property browser,
            	except for the PropertyChanged Property.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell.Attributes">
            <summary>
            Attributes Property
            <para>
            	<br/>give access to the TableCell's Attributes
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell.TagName">
            <summary>
            TagName Property
            <para>
            	<br/>Is the tag name for a table cell
            </para>
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell.PropertyChanged">
            <summary>
            PropertyChanged Property
            <para>
            	<br/>Notifies owning object that a property has changed
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell.Bounds">
            <summary>
            Bounds Property
            <para>
            	<br/>Gives the current bound of a table cell.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell.Visible">
            <summary>
            This cell will be ignored in the layout calculations
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableCell.Clone">
            <summary>
            Clone - make a deep copy
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.ITableRender">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn">
            <summary>
            LayoutColumn Class
            
            Keeps track of the minimum, maximum, and actual width of 
            a table's column.  These values are valid once the table's layout has 
            been calulated.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.#ctor">
            <summary>
            LayoutColumn Constructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.Reset">
            <summary>
            Reset
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.ToString">
            <summary>
            ToString Method
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.Bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.ColumnInfo">
            <summary>
            ColumnInfo 
            
            Allow the designer to set the width of the column
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.InternalBounds">
            <summary>
            InternalBounds
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.MinWidth">
            <summary>
            MinWidth Property
            
            Contains the minimum width of a column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.MaxWidth">
            <summary>
            MaxWidth Property
            
            Contains the maximum width of a column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.ActualWidth">
            <summary>
            MinWidth Property 
            
            Contains the minimum width of a column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.InternalColumnInfo">
            <summary>
            ColumnInfo 
            
            Allow the designer to set the width of the column
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.Add(System.Object)">
            <summary>
            Add Method 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.Item(System.Int32)">
            <summary>
            Item access property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.IsWidthSet">
            <summary>
            IsWidthSet
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.AreThereCellsThatEndInThisColumn">
            <summary>
            AreThereCellsThatEndInThisColumn
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumn.AreThereCellsThatBeginInThisColumn">
            <summary>
            AreThereCellsThatBeginAndEndInThisColumn
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumnCollection">
            <summary>
            LayoutColumnCollection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumnCollection.#ctor(System.Int32)">
            <summary>
            LayoutColumnCollection Constructor
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutColumnCollection.Item(System.Int32)">
            <summary>
            Item Property
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow">
            <summary>
            LayoutRow Class 
            Keeps track of the minimum, maximum, and actual height of 
            a table's row.  These values are valid once the table's layout has 
            been calulated.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.Reset">
            <summary>
            Reset
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.Bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.RowInfo">
            <summary>
            RowInfo
            
            Allows the designer to set the height of a row
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.InternalBounds">
            <summary>
            InternalBounds
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.IsHeightSet">
            <summary>
            IsHeightSet
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.MinHeight">
            <summary>
            MinHeight Property
            
            Contains the maximum height of a column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.MaxHeight">
            <summary>
            MaxHeight Property 
            
            Contains the maximum height of a column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.ActualHeight">
            <summary>
            ActualHeight Property 
            
            Contains the maximum height of a column.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.InternalRowInfo">
            <summary>
            RowInfo
            
            Allows the designer to set the height of a row
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.Add(System.Object)">
            <summary>
            Add Method
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.Item(System.Int32)">
            <summary>
            Item access property for the RowColumn.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.AreThereCellsThatBeginInThisRow">
            <summary>
            AreThereCellsThatEndInThisRow Property
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRow.AreThereCellsThatEndInThisRow">
            <summary>
            AreThereCellsThatEndInThisRow Property
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRowCollection">
            <summary>
            Class LayoutRowCollection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRowCollection.#ctor(System.Int32)">
            <summary>
            LayoutRowCollection Constructor
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LayoutRowCollection.Item(System.Int32)">
            <summary>
            Item Property
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.LineCollection`1.ToString">
            <summary>
            ToString Method
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Padding.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Padding.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Methods
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row">
            <summary>
            Row class
            <para>
            <br/>A row contains a collection of table cells.	
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.tagName">
            <summary>
             tagName
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.cells">
            <summary>
            A collection of cells.
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.sectionRowIndex">
            <summary>
             Index of the row within its table section. 
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.rowIndex">
            <summary>
            Index of the row in the context of the parent table.
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.table">
            <summary>
            Base table.
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.attributes">
            <summary>
            attributes
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.PropertyChanged">
            <summary>
            PropertyChanged
            <para>
            	<br/>
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.type">
            <summary>
            This is used by the reporting engine and the table designer.  A table can have header rows, detail rows, 
            footer rows, and group rows
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed" /> event of a component.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.#ctor">
            <summary>
            Row Constructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.#ctor(System.Int32)">
            <summary>
            Row Constructor
            </summary>
            <param name="type">The type of the row</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.LastRowToRender">
            <summary>
            LastRowToRender
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.TagName">
            <summary>
            TagName
            <para>
            	<br/>is the html tag name
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Cells">
            <summary>
            Cells
            <para>
            	<br/>Is a collection of table cells that makes up a row in a 
            	table.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.SectionRowIndex">
            <summary>
            SectionRowIndex
            <para>
            	<br/>I don't know what I was thinking at this point
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.RowIndex">
            <summary>
            RowIndex
            <para>
            	<br/>I don't know what I was thinking at this point
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Table">
            <summary>
            Table
            <para>
            	<br/>A reference to the table object
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IQuickSaveAndLoad#QuickSave(System.IO.BinaryWriter)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.GrapeCity#ActiveReports#Core#Document#DDLib#Table#IQuickSaveAndLoad#QuickLoad(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.IO.BinaryReader)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            <para>
            	<br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para>
            	<br/>Reads in table information from the designers rpx xml format.
            </para>
            </summary>
            <param name="RowNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.ToString">
            <summary>
            ToString Method
            <para>
            	<br/>override the ToString methods for debug information mostly
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            OnPropertyChanged
            <para><br/>Past the property change up to the next level</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.ShallowClone">
            <summary>
            ShallowClone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes">
            <summary>
            RowAttributes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.#ctor">
            <summary>
            RowAttributes
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Height">
            <summary>
            Width property
            <para><br/>Specifies the width of the table.  This property will 
            mostly be removed</para>
            </summary>
            <value>
            UnitValue
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.BackColor">
            <summary>
            Gets or sets the backcolor.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.ForeColor">
            <summary>
            Gets or sets the forecolor.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.ShallowClone">
            <summary>
            ShallowClone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <para>
            	<br/>Saves the information into a BinaryWriter.
            </para>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            </summary>
            <para>
            	<br/>Loads the information into a BinaryReader.
            </para>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            <para><br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.</para>
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowAttributes.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            OnPropertyChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection">
            <summary>
            RowCollection Class.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.disposed">
            <summary>
            Determines if resources were disposed or not.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.disposing">
            <summary>
            Determines release type.<c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.#ctor">
            <summary>
            RowCollection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="dispose"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Table">
            <summary>
            Table Property
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Clear">
            <summary>
            Removes all objects from the <see cref="T:System.Collections.CollectionBase" /> instance. This method cannot be overridden.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load Method
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            </summary>
            <param name="rowsNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Method
            </summary>
            <param name="rowsNode"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Item(System.Int32)">
            <summary>
            Item Property 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Contains(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            Contains Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.CopyTo(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row[],System.Int32)">
            <summary>
            CopyTo Method
            </summary>
            <param name="values"></param>
            <param name="index"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.IndexOf(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            IndexOf Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Add(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            Add Method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.AddRange(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row[])">
            <summary>
            AddRange Method
            </summary>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.AddRange(GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection)">
            <summary>
            AddRange Method
            </summary>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Insert(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            Insert Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection)">
            <summary>
            InsertRange Method
            </summary>
            <param name="index"></param>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row[])">
            <summary>
            InsertRange Method
            </summary>
            <param name="index"></param>
            <param name="rows"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            OnInsertComplete Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            OnRemoveComplete Method
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.OnClear">
            <summary>
            OnClearComplete Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.OnClearComplete">
            <summary>
            OnClearComplete Method
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.Remove(GrapeCity.ActiveReports.Core.Document.DDLib.Table.Row)">
            <summary>
            Remove Method
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.ToString">
            <summary>
            ToString Method
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.RowCollection.PropertyChangedHandler(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChangedHandler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Spacing">
            <summary>
            Spacing
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Spacing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Spacing"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Spacing.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            </summary>
            <param name="controlNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.Spacing.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Methods
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes">
            <summary>
            TableAttributes are attributes that control how a table will display it's 
            information.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.#ctor">
            <summary>
            TableAttributes Constructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.#ctor(GrapeCity.ActiveReports.Core.Document.DDLib.Table.BaseTable)">
            <summary>
            TableAttributes Constructor
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.ToString">
            <summary>
            ToString Method
            <para>
            	<br/>override the ToString methods for debug information mostly
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Summary">
            <summary>
            The Summary property
            <para><br/>Description of the table</para>
            </summary>
            <value>
            string
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.CellSpacing">
            <summary>
            CellSpacing Property
            <Para>
            <br/>Specifies the spacing between the table cells
            </Para>
            </summary>
            <value>
            Spacing
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.CellPadding">
            <summary>
            CellPadding Property
            <para>
            <br/>Specifies the space around a table cell.
            </para>
            </summary>
            <value>
            Padding
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Border">
            <summary>
            Border Property
            <para>
            <br/>Specifies weather a border will be visible around the table and the table cells.
            </para>
            </summary>
            <value>
            Border
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Rules">
            <summary>
            Rules Property
            <para><br/>Specifies weather a border will be visible around 
            the table cells.</para>
            </summary>
            <value>
            Border
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Width">
            <summary>
            Width property
            <para><br/>Specifies the width of the table.  This property will 
            mostly be removed</para>
            </summary>
            <value>
            UnitValue
            </value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Height">
            <summary>
            Height property
            <para><br/>Specifies the width of the table.  This property will 
            mostly be removed</para>
            </summary>
            <value>
            UnitValue
            </value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            <para><br/>Saves the attribute information into a BinaryWriter.</para>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            <para><br/>Loads the attribute information into a BinaryReader.</para>
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Methods
            <para><br/>Loads the attribute information into a XmlElement Node.
            This method is used to save the table information into rpx format for the 
            designer.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml Methods
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableAttributes.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChangedHandler
            	<para>
            	Pass the property change up to the next level
            	</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes">
            <summary>
            Summary description for TableCellAttributes.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.PropertyChanged">
            <summary>
            PropertyChanged
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.#ctor">
            <summary>
            Initializes a new instance of the TableCellAttributes class
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.ToString">
            <summary>
            ToString Method
            <para>
            	<br/>override the ToString methods for debug information mostly
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Site">
            <summary>
            Site
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Align">
            <summary>
            Align
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.VAlign">
            <summary>
            VAlign
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.ColSpan">
            <summary>
            ColSpan
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.RowSpan">
            <summary>
            RowSpan
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.NoWrap">
            <summary>
            NoWrap
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.ShallowClone">
            <summary>
            ShallowClone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save Method
            <para><br/>Saves the attribute information into a BinaryWriter.</para>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Load Method
            <para><br/>Loads the information into a BinaryReader.</para>
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml Method
            <para><br/>Loads the information into a XmlElement Node. This 
            method is used to save the table information into rpx format 
            for the designer.</para>
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            <para><br/>Reads in table information from the designers rpx xml format.</para>
            </summary>
            <param name="cellNode"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChangedHander
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.TableCellAttributes.OnDummyPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            OnDummyPropertyChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType">
            <summary>
            UnitType Enum.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType.Auto">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType.Pixel">
            <summary>
            Pixel
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType.Inches">
            <summary>
            Inches
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DDLib.Table.UnitType.Twips">
            <summary>
            Twips
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine">
            <summary>
            Summary description for VerticalLine.
            <para>
            	<br/>This class represents a vertical line that separate cells in a table.  This class
            	is used for hittesting.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.#ctor">
            <summary>
            VerticalLine
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.LeftCells">
            <summary>
            LeftCells
            <para>
            	<br/>A list of left cells that touches a vertical line that separates the cells
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.RightCells">
            <summary>
            RightCells
            <para>
            	<br/>A list of right cells that touches a vertical line that separates the cells
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.Bounds">
            <summary>
            Bounds Property
            <para>
            	<br/>Is the bounding rectangle for a vertical line.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.PrevLine">
            <summary>
            PrevLine
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.NextLine">
            <summary>
            NextLine
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.Reset">
            <summary>
            Reset Method
            <para>
            	<br/>Clears the left and right list of cells for a vertical line.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLine.ToString">
            <summary>
            ToString Method
            </summary>
            <para>
            	<br/>A string that represent the vertical line mainly for debugging
            </para>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Table.VerticalLineCollection">
            <summary>
            VerticalLineCollection
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Utility.DrawingUtility">
            <summary>
            Summary description for DrawingUtility.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.Utility.XmlUtility">
            <summary>
            Summary description for XmlUtility.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DDLib.ZLib.ZlibExtensions">
            <summary>
            Used to compress/decompress simple zlib stream (without structure). For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.ZLib.ZlibExtensions.Compress(System.IO.MemoryStream)">
            <summary>
            Compress stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DDLib.ZLib.ZlibExtensions.DeCompress(System.IO.MemoryStream)">
            <summary>
            Decompress stream.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DescriptionRes.Description">
            <summary>
            Description for Resource
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DeviceInfo">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DeviceInfo.ConvertUnitsToInchesX(GrapeCity.ActiveReports.Document.Section.Units,System.Single)">
            <summary>
            ConvertUnitsToInchesX
            </summary>
            <param name="units"></param>
            <param name="fx"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DeviceInfo.ConvertInchesToUnitsX(GrapeCity.ActiveReports.Document.Section.Units,System.Single)">
            <summary>
            ConvertInchesToUnitsX
            </summary>
            <param name="units"></param>
            <param name="fx"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DeviceInfo.ConvertUnitsToInchesY(GrapeCity.ActiveReports.Document.Section.Units,System.Single)">
            <summary>
            ConvertUnitsToInchesY
            </summary>
            <param name="units"></param>
            <param name="fy"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DeviceInfo.ConvertInchesToUnitsY(GrapeCity.ActiveReports.Document.Section.Units,System.Single)">
            <summary>
            ConvertInchesToUnitsY
            </summary>
            <param name="units"></param>
            <param name="fy"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.PersistImpl">
            <summary>
            Implementation helpers for RDF serialization
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PersistImpl.WriteTaggedItem(System.IO.BinaryWriter,System.UInt32,System.Int32)">
            <summary>
            Writes the type of the tagged item.
            Support new canvas items (with length written)
            </summary>
            <param name="writer">The writer.</param>
            <param name="itemType">Type of the canvas item.</param>
            <param name="recordLength"> </param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PersistImpl.ReadTaggedItemType(System.IO.BinaryReader,System.UInt32@,System.Int32@)">
            <summary>
            Reads the type of the tagged item.
            </summary>
            <param name="reader">The reader.</param>
            <param name="taggedItemType">Type of the tagged item.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Extensions.GetStorageOptions``1(GrapeCity.ActiveReports.Core.Document.IDocument{``0})">
            <summary>
            Gets storage options based on document settings
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.FontsCollection">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.FontsCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.FontsCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.FontsCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.FontsCollection.Load(System.IO.BinaryReader)">
            <summary>
            Load
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.FontsCollection.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Save
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.IDocument`1">
            <summary>
            Document Interface
            </summary>
            <typeparam name="T">Page Type</typeparam>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.PrinterSettings">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.CacheToDiskLocation">
            <summary>
            CacheToDiskLocation
            
            Specifies location of CacheToDisk files - can be physical path or "IsolatedStorage" to use IsolatedStorage.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.CacheToDiskEnabled">
            <summary>
            CacheToDisk
            
            This make the pages collection use a temp file for the canvas item streams
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.Password">
            <summary>
            Gets or sets a password to protect the saved document file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.InProgress">
            <summary>
            Determines whether the document is currently loaded.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.UserPreferences">
            <summary>
            Gets or sets the user preferences.
            </summary>
            <value>The user preferences.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.Pages">
            <summary>
            Gets or sets a reference to the document's page.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.IDocument`1.StateChanged">
            <summary>
            Occurs when [state changed].
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IDocument`1.Save(System.IO.Stream,GrapeCity.ActiveReports.Document.Section.RdfFormat)">
            <summary>
            Saves document the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fmt">The format.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IDocument`1.Save(System.IO.Stream,GrapeCity.ActiveReports.Document.Section.RdfFormat,GrapeCity.ActiveReports.Document.Section.SaveOptions)">
            <summary>
            Saves document to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fmt">The format.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IDocument`1.CreatePage">
            <summary>
            For internal use only. Creates the document page which will require less efforts to merge into document.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.IDocument`1.DocumentVersion">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IPagesCollection`1.GetPageByIdentifier(System.Guid)">
            <summary>
            For internal use only
            </summary>
            <param name="pageIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IPagesCollection`1.GetIdentifierByIndexInternal(System.Int32)">
            <summary>
            For internal use only
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IPagesCollection`1.InternalPurgeImageResources">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.LogFont">
            <summary>
            Summary description for LogFont.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.LogFont.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            Summary description for Load.  This method creates a LogFont object and restores its values
            from a given stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.LogFont.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Summary description for Save.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Page">
            <summary>
            Summary description for Page.
            
            Internally all page dimension are kept in inches.
            
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Annotations">
            <summary>
            Annotations. 
            Setter is obsolete and does nothing.
            Please, use AnnotationCollection's methods to modify it.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Fonts">
            <summary>
            Summary description for Fonts Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.EvalItems">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.FillCloneCore(GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.SetEvalItemsCollection">
            <summary>
            SetEvalItemsCollection - adds the canvasItems to the eval collection to produce copyright message
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.RefreshPageInTheCache">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Pages">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.UserPreferences">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.MergeInto(GrapeCity.ActiveReports.Core.Document.IPagesCollection{GrapeCity.ActiveReports.Core.Document.Page})">
            <summary>
            Adds page into collection and remaps internally references resources/fonts
            </summary>
            <param name="pages"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Resources">
            <summary>
            Resources
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.SearchCanvasItemsIndex">
            <summary>
            Summary description for SearchCanvasItemsIndex.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.IsEval">
            <summary>
            Determing is license Evaluation or not.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.EvaluationMessage">
            <summary>
            Gets the evaluation message.
            </summary>
            <value>The evaluation message.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.EvaluationBounds">
            <summary>
            Gets the evaluation bounds.
            </summary>
            <value>The evaluation bounds.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Orientation">
            <summary>
            Orientation
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Size">
            <summary>
            Returns the size of the page in *inches*.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Margins">
            <summary>
            Margins
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Compress">
            <summary>
            Compress
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Width">
            <summary>
            Summary description for Width Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Height">
            <summary>
            Summary description for Height Property.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.CanvasItems">
            <summary>
            Gets readonly collection of canvas items
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.CanvasItemsInternal">
            <summary>
            Provides access to internal read-write canvas items collection
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Bookmarks">
            <summary>
            This is necessary to be public for HtmlExport's use.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.GetDiffIndex(GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Gets index of the first canvas item that differs in current and given page
            </summary>
            <param name="pageInput"></param>
            <returns>negative value if pages are equal</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.RemapFontIndexes(GrapeCity.ActiveReports.Core.Document.FontsCollection)">
            <summary>
            RemapFontIndexes
            </summary>
            <param name="fontsPages"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.AddBookmark(GrapeCity.ActiveReports.Document.Section.Bookmark)">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.SearchInit(System.Boolean)">
            <summary>
            Summary description for SearchInit.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.SearchText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Single@)">
            <summary>
            Summary description for SearchText.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.CalculateBounds">
            <summary>
            CalculateBounds
              Will go through the canvas items to find the bounds of the canvas items contained in the page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Offset(System.Single,System.Single)">
            <summary>
            Offset all of the page's canvas items by the x and y values
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.CreateCanvasItemStream(System.Int16,System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            CreateCanvasItemStream
            </summary>
            <param name="fileVersion"></param>
            <param name="savedResources"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Save(System.IO.BinaryWriter,System.Int16,System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Save Method
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
            <param name="savedResources"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Load(System.IO.BinaryReader,System.Int16,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Summary description for Load Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.CreateCanvasRecords(System.IO.MemoryStream,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Summary description for CreateCanvasRecords Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.AddBookmark(System.String,System.Single)">
            <summary>
            Summary description for AddBookmark.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.CopyrightOld(System.String[],System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CopyrightOld; for arcom.
            </summary>
            <param name="strText"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.ToStrings">
            <summary>
            For internal use only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Overlay(GrapeCity.ActiveReports.Core.Document.Page)">
            <summary>
            Summary description for Overlay Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.WriteTextInfo(GrapeCity.ActiveReports.Document.Section.TextInfoItem)">
            <summary>
            For Internal use only
            
            Used in engine for putting in TextInfo
            </summary>
            <param name="textInfo"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.ControlInfoBegin(GrapeCity.ActiveReports.Document.Section.ControlType,System.String,System.Drawing.RectangleF)">
            <summary>
            For Internal use only
            
            Used in engine for putting in control information
            </summary>
            <param name="controlType"></param>
            <param name="controlName"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.ControlInfoEnd">
            <summary>
            For Internal use only
            
            Used in engine for putting in control information
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.SectionInfoBegin(GrapeCity.ActiveReports.Document.Section.SectionType,System.String)">
            <summary>
            For Internal use only
            
            Used in engine for putting in control information
            </summary>
            <param name="sectionType"></param>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.SectionInfoEnd">
            <summary>
            For Internal use only
            
            Used in engine for putting in control information
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Page.EvalBannerPositionType">
            <summary>
            specifies where eval banner should be located
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.EvalBannerPosition">
            <summary>
            Gets EvalBannerPosition according to Resources
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.MajorVersion">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.PutCopyright(System.Boolean)">
            <summary>
            Copyright - sets copyright flags for the evaluation message
            </summary>
            <param name="pro">Professional edition flag</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.ClearCanvasItems">
            <summary>
            Clear
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Save(System.String)">
            <summary>
            Summary description for Save Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Save(System.IO.Stream)">
            <summary>
            Summary description for Save Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Load(System.String,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load
            </summary>
            <param name="strFileName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.Load(System.IO.Stream,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Load
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Page.CreateSyncImage(GrapeCity.ActiveReports.Document.Section.ResourcedCanvasItem,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            For internal use only
            </summary>
            <param name="rci"></param>
            <param name="imageService"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Identifier">
            <summary>
            Gets unique page identifier (used in PagesCollection to track swapped out pages)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Page.Generation">
            <summary>
            Gets this page generation, used to track page changing
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.PagesCollection`1">
            <summary>
            Contains a collection of Page objects.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.FetchItem">
            <summary>
            For tests only
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Changed">
            <summary>
            For Internal Use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:PagesCollection"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.#ctor(GrapeCity.ActiveReports.Core.Document.DocumentBase{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:PagesCollection"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Add(System.Guid,`0)">
            <summary>
            Add a new item into the cache.
            </summary>
            <param name="k">Identifier or key for item to add.</param>
            <param name="v">Actual item to store.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.CheckReinitializePagePool">
            <summary>
            Reinitializes page pool given new cache options
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Dispose">
            <summary>
            Disposes Page objects from PagesCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Dispose(System.Boolean)">
            <summary>
            Disposing
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Fonts">
            <summary>
            Summary description for Fonts Property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Load(System.IO.BinaryReader,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Summary description for Load Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.SetFonts(GrapeCity.ActiveReports.Core.Document.FontsCollection)">
            <summary>
            Summary description for SetFont.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.AsynchronousLoad(System.IO.BinaryReader,System.Boolean,GrapeCity.ActiveReports.Core.Document.AsynchronousLoadStates@,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Summary description for AsynchnousLoad Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Save20Format(System.IO.BinaryWriter)">
            <summary>
            Summary description for Save20Format.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Save20Format">
            <summary>
            Summary description for Save Save20Format.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Save(System.IO.BinaryWriter,System.Int16,GrapeCity.ActiveReports.Document.Section.SaveOptions)">
            <summary>
            Summary description for Save Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Item(System.Int32)">
            <summary>
            Returns a Page object at specified index in the PagesCollection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <value><c>true</c> if this instance is fixed size; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.GetIdentifierByIndexInternal(System.Int32)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.GetPageByIdentifier(System.Guid)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Clear">
            <summary>
            Removes all the Page objects from the PagesCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Contains(`0)">
            <summary>
            Determines whether a Page element is in the PagesCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.IndexOf(`0)">
            <summary>
            Returns the zero-based index of the first occurrence of the Page object in the PagesCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Add(`0)">
            <summary>
            Adds a Page object to the end of the PagesCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.AddRange(`0[])">
            <summary>
            Overloaded: Adds the elements of an array of Pages to the end of the PagesCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.AddRange(GrapeCity.ActiveReports.Core.Document.PagesCollection{`0})">
            <summary>
            Overloaded: Adds the elements of PagesCollection to the end of the PagesCollection.
            </summary>
            <param name="pages"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts a Page element into the PagesCollection at the specified index. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.InsertRange(System.Int32,GrapeCity.ActiveReports.Core.Document.PagesCollection{`0})">
            <summary>
            Overloaded: Inserts the elements from PageCollections objects into the PagesCollection at the specified index. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.InsertRange(System.Int32,`0[])">
            <summary>
            Overloaded: Inserts the elements from an array of Page objects into the PagesCollection at the specified index. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.InsertNew(System.Int32)">
            <summary>
            Inserts a new Page element into the PagesCollection at the specified index. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of Page object from the PagesCollection. 
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.OnChanged">
            <summary>
            Changed
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.OnPagesChanged(`0,GrapeCity.ActiveReports.Core.Document.PagesAction)">
            <summary>
            Raises <see cref="E:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.PagesChanged"/> event
            </summary>
            <param name="page"></param>
            <param name="action"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Clone">
            <summary>
            Creates a shallow copy of the PagesCollection.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies an array of Page objects to PagesCollection from the specified index.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <value>The synchronize root.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <value><c>true</c> if this instance is synchronized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.DiskCacheInternal">
            <summary>
            For tests only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.DiskCacheLocationInternal">
            <summary>
            For tests only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesCollection`1.InternalPurgeImageResources">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.PagePool`1">
            <summary>
            Page pool implementation
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagePool`1.IsCacheOutdated(System.Guid,`0)">
            <summary>
            Gets true if cache data is to be refreshed
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.PagesAction">
            <summary>
            Enumerates possible actions
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.PagesChangedEventArgs">
            <summary>
            Provides additional data for PagesChanged event
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.PagesChangedEventArgs.#ctor(GrapeCity.ActiveReports.Core.Document.Page,GrapeCity.ActiveReports.Core.Document.PagesAction)">
            <summary>
            Ctor
            </summary>
            <param name="page">Changed pages</param>
            <param name="action"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ChangedEventHandler">
            <summary>
            For Internal Use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.FindOptions">
            <summary>
            The Find Options.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.FindOptions.MatchWholeWord">
            <summary>
            Gets or sets a value indicating whether [match whole word].
            </summary>
            <value><c>true</c> if [match whole word]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.FindOptions.MatchCase">
            <summary>
            Gets or sets a value indicating whether [match case].
            </summary>
            <value><c>true</c> if [match case]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.FindOptions.Reverse">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.ActiveReports.Core.Document.FindOptions"/> is reverse.
            </summary>
            <value><c>true</c> if reverse; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.StateChangedHandler">
            <summary>
            Summary description for Document Events.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.LoadCompletedEventHandler">
            <summary>
            Delegate LoadCompletedEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.DocumentBase`1">
            <summary>
            Vector graphics document representation.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.MetafileLockObject">
            <summary>
            Used for locking code in different assemblies.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.PrinterSettings">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Pages">
            <summary>
            Gets or sets a reference to the document's page.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.CacheToDiskLocation">
            <summary>
            CacheToDiskLocationReadonly
            
            Specifies location of CacheToDisk files - can be physical path or "IsolatedStorage" to use IsolatedStorage.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.CacheToDiskEnabled">
            <summary>
            CacheToDiskEnabled
            
            This make the pages collection use a temp file for the canvas item streams
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Bookmarks">
            <summary>
            Gets a reference to the document's bookmarks.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Password">
            <summary>
            Gets or sets a password to protect the saved document file.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.InProgress">
            <summary>
            Determines whether the document is currently loaded.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.UserPreferences">
            <summary>
            Gets or sets the user preferences.
            </summary>
            <value>The user preferences.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Dispose">
            <summary>
            If you call dispose on this level that means that you are
            not suppose to use anything that is contained below this 
            level.  That means no pages, no fonts, etc.
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.StateChanged">
            <summary>
            Occurs when [state changed].
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.SearchResultChanged">
            <summary>
            For internal use only - way to change in future versions
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Dispose(System.Boolean)">
            <summary>
            Dispose implementation
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Find(System.String,System.Int32@)">
            <summary>
            Search for the specified character string.
            </summary>
            <param name="searchString">The string you are searching for</param>
            <param name="currentIndex">The page's collection zero based index</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.ClearFindTextSelection">
            <summary>
            ClearFindTextSelection
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Find(System.String,GrapeCity.ActiveReports.Core.Document.FindOptions,System.Int32@,System.Single@)">
            <summary>
            Search the document page for the specified character string.
            </summary>
            <param name="searchString">The string you are searching for</param>
            <param name="currentIndex">The page's collection zero based index</param>
            <param name="options">which direction you are searching</param>
            <param name="currentOffset">The current offset into the text string</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.CreatePage">
            <summary>
            For internal use only. Creates the document page which will require less efforts to merge into document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Load(System.IO.Stream,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Loads document from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Load(System.String,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)" -->
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.AsynchronousLoad(System.IO.Stream,System.Boolean,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Summary description for AsynchnousLoad Method.
            
            This method is repeatly called by the DownloadRequest object and keeps it's state of the 
            last time it was called in the m_theLoadState data member
            
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Save(System.String,GrapeCity.ActiveReports.Document.Section.RdfFormat)">
            <summary>
            Saves document to the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="fmt">The format.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Save(System.String,GrapeCity.ActiveReports.Document.Section.RdfFormat,GrapeCity.ActiveReports.Document.Section.SaveOptions)">
            <summary>
            Saves document to the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="fmt">The format.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Save(System.String)">
            <summary>
            Saves document to the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Save(System.IO.Stream,GrapeCity.ActiveReports.Document.Section.RdfFormat)">
            <summary>
            Saves document the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fmt">The format.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Save(System.IO.Stream,GrapeCity.ActiveReports.Document.Section.RdfFormat,GrapeCity.ActiveReports.Document.Section.SaveOptions)">
            <summary>
            Saves document to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fmt">The format.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.Save(System.IO.Stream)">
            <summary>
            Saves document to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.RaiseInProgressChanged(GrapeCity.ActiveReports.Document.Section.State)">
            <summary>
            For internal use only
            </summary>
            <param name="state"></param>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.LoadCompleted">
            <summary>
            Occurs after all document pages are fully loaded.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.RenderingInformation">
            <summary>
            Extra rendering information, which can allow to render RDF properly.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.DocumentBase`1.OnNewPage(System.Object)">
            <summary>
            Hack.This method added to avoid problem in Visual Studio after merge assemblies
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.GenericDocument`2">
            <summary>
            Vector graphics document representation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.GenericDocument`2.Pages">
            <summary>
            Gets or sets a reference to the document's page.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ObjectTag">
            <summary>
            Summary description for ObjectTag.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ObjectTag.Load(System.IO.BinaryReader,System.Int16)">
            <summary>
            The description for the Load Method.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ObjectTag.Save(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Summary description for SaveTag Method.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.IImagePersistenceService">
            <summary> Image processing service. </summary>
            <remarks> For internal use.</remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IImagePersistenceService.ImageFromStream(System.IO.Stream)">
            <summary>
            Loads image from stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IImagePersistenceService.ImageToStream(System.Drawing.Image,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            Saves image back to stream.
            </summary>
            <param name="image"></param>
            <param name="format"></param>
            <param name="stream"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.IImagePersistenceService.ImageFromIPictureStream(System.Byte[])">
            <summary>
            Loads image from OLE IPicture: https://docs.microsoft.com/en-us/windows/win32/api/olectl/nf-olectl-oleloadpicture.
            </summary>
            <returns>null if cannot load</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.TextLayoutResult">
            <summary>
            Text layout result.
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutResult.Strings">
            <summary>
            Text lines after text layout.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutResult.LogicalStrings">
            <summary>
            Logical strings for justify alignment algorithms. Null otherwise.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutResult.Size">
            <summary>
            Result size in inches.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.TextLayoutParams">
            <summary>
            Text layout parameters. Please ensure to specify WrapMode/EnableKinsoku/MultiLine to obtain right output.
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.HorizontalAlignment">
            <summary>
            Text alignment.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.VerticalAlignment">
            <summary>
            Lines alignment.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.Padding">
            <summary>
            Predefined padding in points.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.TextJustify">
            <summary>
            Justification algorithm (in cas of Justified text alignment). 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.WrapMode">
            <summary>
            Line breaking wrap mode (by default - NoWrap).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.EnableKinsoku">
            <summary>
            Force Kinsoku rules (if supported).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.CharacterSpacing">
            <summary>
            Character spacing in points.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.LineSpacing">
            <summary>
            Line spacing in points.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.IsRtl">
            <summary>
            Specify text direction.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.MultiLine">
            <summary>
            Allows multiline or not (by default - not allows).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.TextAngle">
            <summary>
            Text rotation in angels * 10.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.IsVertical">
            <summary>
            Allows vertical glyphs.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.ClipStart">
            <summary>
            Vertical clip position start (from 0 to 'height' for line trimming).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.ClipHeight">
            <summary>
            Vertical clip position height (from 0 to 'height' for line trimming).
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.TextLayoutParams.TabStops">
            <summary>
            Tabs.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ITextLayoutService">
            <summary> Text layout abstraction. </summary>
            <remarks> For internal use. </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ITextLayoutService.Layout(System.String,System.Drawing.Font,System.Single,GrapeCity.ActiveReports.Core.Document.TextLayoutParams)">
            <summary>
            Layouts a text.
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="width">Width in inches</param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ITextLayoutService.LayoutShrinkToFit(System.String,System.Drawing.Font,System.Single,System.Single,GrapeCity.ActiveReports.Core.Document.TextLayoutParams,System.Single@)">
            <summary>
            Layouts a text with attempt to find min possible font
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="width">Width in inches</param>
            <param name="height">Height in inches</param>
            <param name="param"></param>
            <param name="fontSize">Result font size</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ITextLayoutService.TrimTextLines(System.String,System.Drawing.Font,System.Single,System.Single,GrapeCity.ActiveReports.Core.Document.TextLayoutParams)">
            <summary>
            Trim text overflowing the layout box.
            Do not take into account justification.
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="width">Width in inches</param>
            <param name="height">Height in inches</param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.MetafileSaver">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.MetafileSaver.SaveMetafile(System.Drawing.Image,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.CannotConvertToDDPadding">
            <summary>
              Looks up a localized string similar to Object {0} is not valid padding. Please enter value in format 1{1} 2{1} 3{1} 4.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_Annotation_Alpha">
            <summary>
              Looks up a localized string similar to Gets or sets a value that determines the alpha transparency of the background color.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationArrow">
            <summary>
              Looks up a localized string similar to Arrow Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationBalloon">
            <summary>
              Looks up a localized string similar to Balloon Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationCircle">
            <summary>
              Looks up a localized string similar to Circle Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationImage">
            <summary>
              Looks up a localized string similar to Image Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationLine">
            <summary>
              Looks up a localized string similar to Line Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationRectangle">
            <summary>
              Looks up a localized string similar to Rectangle Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Desc_AnnotationText">
            <summary>
              Looks up a localized string similar to Text Annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.ErrorPasswordsDoNotMatch">
            <summary>
              Looks up a localized string similar to The passwords do not match, document password may not be set correctly..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.EvalBannerPosition">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.EvaluationNotice">
            <summary>
              Looks up a localized string similar to This document was created using an EVALUATION version of ActiveReports {0}. Only a licensed user may legally create reports for use in production. Please report infractions or address questions to activereports.sales@grapecity.com. Copyright © 2021 GrapeCity, inc. All rights reserved..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.EvaluationNoticeFontName">
            <summary>
              Looks up a localized string similar to Arial.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.EvaluationNoticePro">
            <summary>
              Looks up a localized string similar to This document was created using a STANDARD or an EVALUATION version of ActiveReports {0}. Only a PROFESSIONAL EDITION licensed user may legally create reports for use in production. Please report infractions or address questions to activereports.sales@grapecity.com. Copyright © 2021 GrapeCity, inc. All rights reserved..
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Resources.Exception_ResMgr_MemoryFull">
            <summary>
              Looks up a localized string similar to Memory pool is full while CacheToDisk is off.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.CacheNode`2">
            <summary>
            Represents cache item
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.CacheNodeFactory`2">
            <summary>
            Provides generics bounds way of creating cache nodes
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.CacheNodeFactory`2.CreateNew(`0,`1)">
            <summary>
            Creates new cache node
            </summary>
            <param name="key"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IBinaryPersist`1">
            <summary>
            Interface for cache serializer
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2">
            <summary>
            Disk based storage implementation
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.PosInfo">
            <summary>
            Cache position. Might be extended in the future to include say file number
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.#ctor(System.String,GrapeCity.ActiveReports.Core.Document.ResourceStorage.IBinaryPersist{`1})">
            <summary>
            Initializes a new DiskCache instance
            </summary>
            <param name="initialPath">Storage file path</param>
            <param name="persistImpl">Items persister implementation</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.Add(`0,`1)">
            <summary>
            Adds new item to cache
            </summary>
            <param name="id"></param>
            <param name="objectToCache"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.Get(`0)">
            <summary>
            Gets item from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.Contains(`0)">
            <summary>
            Gets true if cache contains specific data
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.Remove(`0)">
            <summary>
            Removes the item from cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.Count">
            <summary>
            Gets number of items held in the cache
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DiskCache`2.Size">
            <summary>
            Gets current cache size
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.DisposeAction`1">
            <summary>
            Invokes specified action with parameter on instance disposing.
            Intended to be used as an utility class.
            </summary>
            <typeparam name="P">Type of action parameter</typeparam>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.Clear">
            <summary>
            Clears currntly collected stats.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.Add(`2)">
            <summary>
            Adds usage info for particular cache node.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.Subtract(`2)">
            <summary>
            Subtract usage stats for cache node.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.IsAboveLimit">
            <summary>
            Gets true if cache capacity is reached.
            </summary>
            <value> </value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.FitsInCache(System.Int64)">
            <summary>
            Check if cache has enough space  to place the item (with fillfactor in mind).
            </summary>
            <param name="requiredSpace">The required space.</param>
            <returns><c>True</c> if cache has enough space, <c>False</c> otherwise.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.SpaceUsed">
            <summary>
            Gets the space currently used.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.Capacity">
            <summary>
            Gets cache capacity.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ICachePolicy`3.ItemCount">
            <summary>
            Gets the number of items in cache.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2">
            <summary>
            Generic cache implementation.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.PurgeItem">
            <summary>
            Raised before item is purged out of the cache
            </summary>
        </member>
        <member name="E:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.FetchItem">
            <summary>
            Called when item is requested but not found in cache
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Policy">
            <summary>
            Gets cache policy settings and stats.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Capacity">
            <summary>
            Gets cache capacity
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.SpaceUsed">
            <summary>
            Gets the space currently occupied
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Count">
            <summary>
            Gets cache items count
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Add(`0,`1)">
            <summary>
            Add a new item into the cache.
            </summary>
            <param name="k">Identifier or key for item to add.</param>
            <param name="v">Actual item to store.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Purge(`0)">
            <summary>
            Swaps the specified item out of the cache
            </summary>
            <param name="k">Identifier for the item to remove.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Remove(`0)">
            <summary>
            Removes item from cache
            </summary>
            <param name="k">Identifier for the item to remove.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Clear">
            <summary>
            Clears cache entirely. Does not dispose items contained within the cache
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Touch(`0)">
            <summary>
            Touch or refresh a specified item.  This allows the specified
            item to be moved to the end of the dispose queue.  E.g. when it
            is known that this item would benefit from not being purged.
            </summary>
            <param name="k">Identifier of item to touch.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.GetValue(`0)">
            <summary>
            Returns the item associated with the supplied identifier.
            </summary>
            <param name="k">Identifier for the value to be returned.</param>
            <returns>Item value corresponding to Key supplied.</returns>
            <remarks>Accessing a stored item in this way automatically
            forces the item to the end of the purge queue.</remarks>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.Item(`0)">
            <summary>
            Gets the value by jey specified. Gets null if cache doesn't contain the key
            </summary>
            <param name="k">Key identifying value</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.ContainsKey(`0)">
            <summary>
            Gets true if item is currently in cache
            </summary>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.GetKeys">
            <summary>
            Gets keys of the items currently stored in cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.PurgeAll">
            <summary>
            Empties the cache of all items.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.OnFetchItem(`0,`1@)">
            <summary>
            Raises the FetchItem event for the node.
            </summary>
            <param name="key">The key of the cache node.</param>
            <param name="value">The value of the cache node.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.FetchStats">
            <summary>
            Gets cache statistics
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.PoolStats">
            <summary>
            Pool statistics
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.CachePolicy`1">
            <summary>
            Simple cache policy implementation. Collects number of items and space occupied,
            watches the capacity does not exeed
            </summary>
            <typeparam name="TCacheNode"></typeparam>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.CachePolicy`1.Capacity">
            <summary>
            Gets or sets maximum cache capacity.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.FetchItemEventArgs">
            <summary>
            Represents arguments for FetchItem event
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.FetchItemEventArgs.Key">
            <summary>
            Gets the key of the item to ve retrieved
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.FetchItemEventArgs.Value">
            <summary>
            Gets or sets the value of the item
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.FetchItemEventArgs.Empty">
            <summary>
            Gets empty instance
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.PurgeItemEventArgs">
            <summary>
            Represents arguments for PurgeItem event
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.GenericCache`2.PurgeItemEventArgs.Node">
            <summary>
            Gets the node to be purged
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2">
            <summary>
            Disk cache interface
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2.Add(`0,`1)">
            <summary>
            Adds new item to cache
            </summary>
            <param name="id"></param>
            <param name="objectToCache"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2.Get(`0)">
            <summary>
            Gets item from cache
            </summary>
            <param name="id"></param>
            <param name="objectToCache"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2.Contains(`0)">
            <summary>
            Gets true if cache contains specific data
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2.Remove(`0)">
            <summary>
            Removes the item from cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2.Count">
            <summary>
            Gets number of items held in the cache
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IDiskCache`2.Size">
            <summary>
            Gets current cache size
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey">
            <summary>
            Inner key to identify stored resources internally
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey.Id">
            <summary>
            Gets key identifier
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey.#ctor(System.Int32)">
            <summary>
            Creates new key
            </summary>
            <param name="id"></param>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey.Empty">
            <summary>
            Gets "empty" key
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey.IsEmpty">
            <summary>
            Gets true if key is empty (does not reference any resource)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IResource">
            <summary>
            Represents resource
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IResource.ToByteArray">
            <summary>
            Saves resource as a byte array
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IResource.Release">
            <summary>
            Releases any objects associated with resource (memory, GDI object etc)
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IResourceFactory`1">
            <summary>
            Resources instantiation facility. Complement to IResource.ToByteArray()
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.IResourceFactory`1.CreateFromBuffer(System.Byte[],GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Initializes resource from byte array
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.NullDiskCache`2">
            <summary>
            A "black hole" disk cache.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey">
            <summary>
            Represents key to resource items
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey.IsEmpty">
            <summary>
            Gets true if key is empty
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey.Empty">
            <summary>
            Gets "empty" key, referencing no resource
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey.Create(System.Int32)">
            <summary>
            Creates new key with existing ident
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType">
            <summary>
            Specifies hanling type for resource
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType.Unmanaged">
            <summary>
            Resource is kept as is by reference, no pooling is performed
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType.Managed">
            <summary>
            ResourceManager gets full control over resource and disposes it if necessary
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType.ManagedNoDispose">
            <summary>
            The same as managed but ResourceManager must not dispose it explicitly
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager">
            <summary>
            Implements resource management facility
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager._lastKeyId">
            <summary>
            Keeps last ResourceKey ident
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.#ctor(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageOptions)">
            <summary>
            If you create ResourceManager to *read* resources, 
            consider enlarging memory pool capacity in cost of GDI, 
            because all resources loaded into memory and not instantiated untill used.
             </summary>
            <param name="options"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Add(System.Drawing.Image,GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Adds new resource to resource manager
            </summary>
            <param name="image"></param>
            <param name="storageType"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Add(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource)">
            <summary>
            Adds new resource to resource manager
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Add(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource,GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey)">
            <summary>
            Adds new resource to resource manager
            </summary>
            <param name="resource"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.CreateNewKey">
            <summary>
            Creates new outer key
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Get(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Gets an image by a key
            </summary>
            <param name="resourceKey"></param>
            <param name="imageService"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.GetBinary(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey)">
            <summary>
            Gets binary representatin of resource
            </summary>
            <param name="resourceKey"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.IsEmpty">
            <summary>
            Gets true if resource manager contains no data
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Locate(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Gets an image by a key
            </summary>
            <param name="resourceKey"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Remove(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey)">
            <summary>
            Removed resource from resource manager
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Replace(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey,System.Drawing.Image,GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Replaces image resource
            </summary>
            <param name="key"></param>
            <param name="image"></param>
            <param name="storageType"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Replace(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey,GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey)">
            <summary>
            Replace the inner key for the specific resource key.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.FetchStats">
            <summary>
            Retrieves current statistics
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Size">
            <summary>
            Gets the number of allocated resource items
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Clear">
            <summary>
            Clears resource manager and disposes disk cache
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.WriteResourceData(System.IO.BinaryWriter,System.Int16,GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey)">
            <summary>
            Write data associated with Resource to stream
            Are using for writing resources to RDF-file
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
            <param name="resource"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ReadResourceData(System.IO.BinaryReader,System.Int16)">
            <summary>
            Read resource data from an RDF stream directly into *Memory* pool. 
            Image _doesn't_ get instanitated during the process. 
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ReadResourceKey(System.IO.BinaryReader)">
            <summary>
            Creates new Resource and read its data from stream
            Using for reading resource key (id) from RDF-file
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.WriteResourceKey(System.IO.BinaryWriter,GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey)">
            <summary>
            Writes resource key to stream
            </summary>
            <param name="writer"></param>
            <param name="key"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.PrepareToSave(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey)">
            <summary>
            Prepares resource manager to persist it to RDF file (all duplicates has to be resolved)
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.PurgeGdiCache">
            <summary>
            Purges all items off the GDI pool
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.PurgeToDisk">
            <summary>
            Purges all items off the GDI pool and memory pool
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Dispose">
            <summary>
            Clears any resources and disposes disk cache if any
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.CloneResource(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey,GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Copies resource to specific storage and get a copy
            </summary>
            <param name="key"></param>
            <param name="targetStorage"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.LocateInnerKey(GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceKey)">
            <summary>
            Gets inner resource key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.LocateResource``1(``0,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{GrapeCity.ActiveReports.Core.Document.ResourceStorage.InnerKey,``0}})">
            <summary>
            Locates key for specific resource
            </summary>
            <param name="resource"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.GdiPoolNode">
            <summary>
            Implements pool node for GDI cache
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource">
            <summary>
            IResource implementation for ResourceManager
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.#ctor(System.Byte[],GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Initializes a new instance of the ImageResource from stream
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.#ctor(System.IO.BinaryReader,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Initializes a new instance of the ImageResource from reader
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.#ctor(System.Drawing.Image,GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageType,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Initializes a new instance of the ImageResource from image
            </summary>
            <param name="image"></param>
            <param name="storageType"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.Image">
            <summary>
            Gets image wrapped held within resource
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.ImageSize">
            <summary>
            Gets the image size (Width * Height * PixelSize)
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.StorageType">
            <summary>
            Gets resource storage type
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.CloneImage(System.Drawing.Image,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
            <summary>
            Creates a streammed clone for an Image
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.Factory">
            <summary>
            Resource factory implementation
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.ImageResource.Factory.CreateWithReader(System.IO.BinaryReader)">
            <summary>
            Reads ImageResource from RDF stream, and returns it as MemorizedResource,
            i.e. in raw bytes, without instantiating an actual Image, thus saving GDI
            resources.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.MemorizedResource">
            <summary>
            Resource data for memory pool
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.MemorizedResource.SpaceUsed">
            <summary>
            Gets amount of space occupied
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.MemorizedResource.Release">
            <summary>
            Releases any resources held
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.MemorizedResource.CacheSerializer">
            <summary>
            Resource to DiskCache serializer implementation
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.MemoryPoolNode">
            <summary>
            Represents node in memory pool
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceManager.Stats">
            <summary>
            Represents statistical info on current ResourceManager state
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageOptions">
            <summary> 
            Represents ResourceManager options
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageOptions.GdiPoolCapacity">
            <summary>
            Maximal number of items in GDI pool.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Core.Document.ResourceStorage.ResourceStorageOptions.GdiPoolSizeCapacity">
            <summary>
            Maximal size of images stored in GDI pool (bytes).
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Utility.BorderConverter">
            <summary>
            BorderConverter
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.BorderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            ConvertFrom
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.BorderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertTo
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.BorderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine">
            <summary>
            BorderLine
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.#ctor(System.Drawing.Drawing2D.DashStyle,System.Single,System.Drawing.Color,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine"/> class.
            </summary>
            <param name="style">The style.</param>
            <param name="thickness">The thickness.</param>
            <param name="color">The color.</param>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.StartPoint">
            <summary>
            StartPoint
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.EndPoint">
            <summary>
            EndPoint
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.Thickness">
            <summary>
            Thickness
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.BorderLine.ToString">
            <summary>
            ToString Method
            </summary>
            <para>
            	<br/>A string that represent the vertical line mainly for debugging
            </para>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator">
            <summary>
            Provides MD5 digest calculation implementation
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.ComputeMD5(System.IO.Stream)">
            <summary>
            Computes MD5 hash for specified binary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.ComputeMD5(System.Byte[])">
            <summary>
            Computes MD5 hash for specified binary stream
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.ComputeSimpleStringHash(System.IO.Stream)">
            <summary>
            Computes simplified hash for specified binary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.ComputeSimpleStringHash(System.Byte[])">
            <summary>
            Computes simplified hash for specified binary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.ComputeSimpleHash(System.IO.Stream)">
            <summary>
            Computes simplified hash for specified binary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.ComputeSimpleHash(System.Byte[])">
            <summary>
            Computes simplified hash for specified binary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.Compute(System.Byte[],System.Func{GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.MD5Digest,System.Byte[],GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.MD5Digest})">
            <summary>
            Computes hash for specified binary stream.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.Compute(System.IO.Stream,System.Func{GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.MD5Digest,System.Byte[],GrapeCity.ActiveReports.Core.Document.Utility.HashCalculator.MD5Digest})">
            <summary>
            Computes hash for specified binary stream and specified block transform function
            </summary>
            <param name="stream"></param>
            <param name="transform">Block transform function</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Core.Document.Utility.ImageUtils">
            <summary>
            Gdi Image utility methods. For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Core.Document.Utility.ImageUtils.FromStream(System.IO.Stream)">
            <summary>
            Loads an image and rotates it according to the EXIF through System.Drawing
            https://www.cyotek.com/blog/handling-the-orientation-exif-tag-in-images-using-csharp
            For internal use only
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Border">
            <summary>
            Summary description for Border.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.GetBorderLineWidth(GrapeCity.ActiveReports.BorderLineStyle,System.Single)">
            <summary>
            For internal use only
            </summary>
            <param name="borderLineStyle"></param>
            <param name="pageScale"></param>
            <returns></returns>
        </member>
        <member name="E:GrapeCity.ActiveReports.Border.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Border"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.LineStyleOfEdges">
            <summary>
            Gets the line style of edges.
            </summary>
            <value>The line style of edges.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.ColorOfEdges(System.Int32)">
            <summary>
            Gets color of the edge at given index.
            </summary>
            <param name="index">The index.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Border.</returns>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.TopColor">
            <summary>
            Summary description for Border Colors. 
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.BottomColor">
            <summary>
            Gets or sets the color of the bottom.
            </summary>
            <value>The color of the bottom.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.LeftColor">
            <summary>
            Gets or sets the color of the left.
            </summary>
            <value>The color of the left.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.RightColor">
            <summary>
            Gets or sets the color of the right.
            </summary>
            <value>The color of the right.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.TopStyle">
            <summary>
            Summary description for Border Styles.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.BottomStyle">
            <summary>
            Gets or sets the bottom style.
            </summary>
            <value>The bottom style.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.LeftStyle">
            <summary>
            Gets or sets the left style.
            </summary>
            <value>The left style.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.RightStyle">
            <summary>
            Gets or sets the right style.
            </summary>
            <value>The right style.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.Shadow">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.ActiveReports.Border"/> is shadow.
            </summary>
            <value><c>true</c> if shadow; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Read(System.IO.BinaryReader,System.Int16)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.CopyTo(GrapeCity.ActiveReports.Border)">
            <summary>
            Copies to.
            </summary>
            <param name="border">The border.</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="fileVersion"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.ReadXml(System.Xml.XmlNode)">
            <summary>
            ReadXml
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.WriteXml(System.Xml.XmlElement)">
            <summary>
            WriteXml
            </summary>
            <param name="controlNode"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.PenStyle(System.Int32)">
            <summary>
            Style
            
            Internal use only
            </summary>
            <param name="edge"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Render(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Renders the border around the specified rectangle.
            </summary>
            <param name="graphics">The Graphics go render the border on.</param>
            <param name="border">The Border's rectangle in inches.</param>
            <remarks>
            This method must be public as the FormatBorderDialog in ARDesigner requires 
            this method.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Render(System.Drawing.Graphics,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Renders the border around the specified rectangle.
            </summary>
            <param name="graphics">The Graphics go render the border on.</param>
            <param name="border">The Border's rectangle in inches.</param>
            <remarks>
            This method must be public as the FormatBorderDialog in ARDesigner requires 
            this method.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.GetShadowLinePosition(GrapeCity.ActiveReports.BorderEdges,System.Drawing.RectangleF,System.Single,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Get shadow line's position.
            </summary>
            <param name="borderEdges"></param>
            <param name="borderRect"></param>
            <param name="pageScale"></param>
            <param name="shadowStart"></param>
            <param name="shadowEnd"></param>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Render(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Renders the border around the specified rectangle.
            Overlaoded the Render to render table borders in rtf tables with border widths.
            the widths value less than or equaL to 0f does the default rendering
            
            Internal use only
            </summary>
            <param name="graphics">The Graphics go render the border on.</param>
            <param name="border">The Border's rectangle in inches.</param>
            <param name="penWidthT">Pen Width Top</param>
            <param name="penWidthL">Pen Width Left</param>
            <param name="penWidthB">Pen Width Bottom</param>
            <param name="penWidthR">Pen Width Right</param>
            <param name="printing"></param>
            <remarks>
            This method must be public as the FormatBorderDialog in ARDesigner requires 
            this method.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Render(System.Collections.ArrayList,System.Drawing.RectangleF,System.Single,System.Single,System.Single)">
            <summary>
            Renders the border around the specified rectangle.
            Internal use only
            </summary>
            <param name="borderLines"></param>
            <param name="border">The Border's rectangle in inches.</param>
            <param name="dpiX"></param>
            <param name="dpiY"></param>
            <param name="pageScale">Graphics' page scale.</param>
            <remarks>
            This method must be public as the FormatBorderDialog in ARDesigner requires 
            this method.
            </remarks>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.GetMargins(System.Single)">
            <summary>
            Returns a BorderMargin object containing the thickness of the top, left, right, and bottom edges of the border that will be drawn.
            
            Internal use only
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.MarginsInPoints(System.Single,System.Single,System.Single)">
            <summary>
            Returns a BorderMargin object containing the thickness of the top, left, right, and bottom edges of the border that will be drawn.
            
            Internal use only
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Inflate(System.Single,System.Drawing.RectangleF)">
            <summary>
            Inflate
            
            Internal use only
            </summary>
            <param name="pageScale"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.Inflate(System.Single,System.Drawing.RectangleF,System.Single)">
            <summary>
            Inflate
            
            Internal use only
            </summary>
            <param name="pageScale"></param>
            <param name="bounds"></param>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.InflateInches(GrapeCity.ActiveReports.Core.Document.DeviceInfo,System.Drawing.RectangleF)">
            <summary>
            InflateInches
            
            Internal use only
            </summary>
            <param name="graphics"></param>
            <param name="inchBounds"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.IsEmpty">
            <summary>
            IsEmpty
            
            Internal use Only
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.Border.BorderMargins">
            <summary>
            Used only for Border.GetMargins().  
            Contains the thickness of the top, left, right, and bottom border that will be drawn 
            around the outside of the control.
            This is used for FormatBorderDialog's preview, and in AREngine to prevent 
            growing/shrinking sections from clipping borders.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Border.BorderMargins.m_left">
            <summary>
            Private storage for the Left property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Border.BorderMargins.m_top">
            <summary>
            Private storage for the Top property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Border.BorderMargins.m_right">
            <summary>
            Private storage for the Right property.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.Border.BorderMargins.m_bottom">
            <summary>
            Private storage for the Bottom property.
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.Border.BorderMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BorderMargins class with the specified left, top, right and bottom margin thickness values.
            </summary>
            <param name="argTop"></param>
            <param name="argLeft"></param>
            <param name="argRight"></param>
            <param name="argBottom"></param>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.BorderMargins.Left">
            <summary>
            Returns the thickness of the Left border.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.BorderMargins.Top">
            <summary>
            Returns the thickness of the Top border.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.BorderMargins.Right">
            <summary>
            Returns the thickness of the Right border.
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.Border.BorderMargins.Bottom">
            <summary>
            Returns the thickness of the Bottom border.
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.PaddingEx">
            <summary>
            Padding class
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.PaddingEx.Empty">
            <summary>
            DDPadding Empty Structure
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.#ctor(System.Int32)">
            <summary>
            DDPadding Constructor
            </summary>
            <param name="all">All</param>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            DDPadding Constructor
            </summary>
            <param name="left">Left</param>
            <param name="top">Tol</param>
            <param name="right">Right</param>
            <param name="bottom">Bottom</param>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.All">
            <summary>
            Gets or sets padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Bottom">
            <summary>
            Gets or sets bottom padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Left">
            <summary>
            Gets or sets left padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Right">
            <summary>
            Gets or sets right padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Top">
            <summary>
            Gets or sets top padding
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Horizontal">
            <summary>
            Gets horizontal padding property
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Vertical">
            <summary>
            Gets versical padding property
            </summary>
        </member>
        <member name="P:GrapeCity.ActiveReports.PaddingEx.Size">
            <summary>
            Gets size
            </summary>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.op_Equality(GrapeCity.ActiveReports.PaddingEx,GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Implements the ==.
            </summary>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.op_Inequality(GrapeCity.ActiveReports.PaddingEx,GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Implements the !=.
            </summary>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.Equals(GrapeCity.ActiveReports.PaddingEx)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.ActiveReports.PaddingEx" /> is equal to this instance.
            </summary>
            <param name="paddingEx">Another object to compare to.</param>
            <returns><c>true</c> if the specified <see cref="T:GrapeCity.ActiveReports.PaddingEx" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrapeCity.ActiveReports.PaddingEx.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:GrapeCity.ActiveReports.PaddingEx.PaddingExConverter">
            <summary>
            Type converter for DDPadding class
            </summary>
        </member>
        <member name="T:GrapeCity.ActiveReports.BorderLineStyle">
            <summary>
            Possible border styles.
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.Dash">
            <summary>
            The dash
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.Dot">
            <summary>
            The dot
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.DashDot">
            <summary>
            The dash dot
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.DashDotDot">
            <summary>
            The dash dot dot
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.Double">
            <summary>
            The double
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ThickSolid">
            <summary>
            The thick solid
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ThickDash">
            <summary>
            The thick dash
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ThickDot">
            <summary>
            The thick dot
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ThickDashDot">
            <summary>
            The thick dash dot
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ThickDashDotDot">
            <summary>
            The thick dash dot dot
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ThickDouble">
            <summary>
            The thick double
            </summary>
        </member>
        <member name="F:GrapeCity.ActiveReports.BorderLineStyle.ExtraThickSolid">
            <summary>
            The extra thick solid
            </summary>
        </member>
    </members>
</doc>
